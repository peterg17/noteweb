{"ast":null,"code":"var rng;\nvar crypto = global.crypto || global.msCrypto; // for IE 11\n\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var _rnds = new Array(16);\n\n  rng = function () {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/node_modules/react-graph-vis/node_modules/uuid/rng-browser.js"],"names":["rng","crypto","global","msCrypto","getRandomValues","_rnds8","Uint8Array","whatwgRNG","_rnds","Array","i","r","Math","random","module","exports"],"mappings":"AACA,IAAIA,GAAJ;AAEA,IAAIC,MAAM,GAAGC,MAAM,CAACD,MAAP,IAAiBC,MAAM,CAACC,QAArC,C,CAA+C;;AAC/C,IAAIF,MAAM,IAAIA,MAAM,CAACG,eAArB,EAAsC;AACpC;AACA;AACA,MAAIC,MAAM,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAAb;;AACAN,EAAAA,GAAG,GAAG,SAASO,SAAT,GAAqB;AACzBN,IAAAA,MAAM,CAACG,eAAP,CAAuBC,MAAvB;AACA,WAAOA,MAAP;AACD,GAHD;AAID;;AAED,IAAI,CAACL,GAAL,EAAU;AACR;AACA;AACA;AACA;AACA,MAAKQ,KAAK,GAAG,IAAIC,KAAJ,CAAU,EAAV,CAAb;;AACAT,EAAAA,GAAG,GAAG,YAAW;AACf,SAAK,IAAIU,CAAC,GAAG,CAAR,EAAWC,CAAhB,EAAmBD,CAAC,GAAG,EAAvB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9B,UAAI,CAACA,CAAC,GAAG,IAAL,MAAe,CAAnB,EAAsBC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,WAApB;AACtBL,MAAAA,KAAK,CAACE,CAAD,CAAL,GAAWC,CAAC,MAAM,CAACD,CAAC,GAAG,IAAL,KAAc,CAApB,CAAD,GAA0B,IAArC;AACD;;AAED,WAAOF,KAAP;AACD,GAPD;AAQD;;AAEDM,MAAM,CAACC,OAAP,GAAiBf,GAAjB","sourcesContent":["\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n"]},"metadata":{},"sourceType":"script"}