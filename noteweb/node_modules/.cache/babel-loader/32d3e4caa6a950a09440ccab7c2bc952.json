{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass NoteWeb extends Component {\n  /**\n   * This is the main application. Creates a network of nodes for note taking, rather than a linear set of notes. \n   * Will use machine learning on back end to automatically link notes to each other\n   */\n  constructor(props) {\n    /**\n     * Constructor for Noteweb application. Initializes nodes and edges for graph. initializes the state. binds functions. \n     */\n    super(props);\n    this.state = {\n      id: \"None\",\n      title: \"Title\",\n      note: \"This is where your note is displayed\"\n    };\n    console.log(this.note);\n\n    const Decorator = props => {\n      return React.createElement(\"button\", {\n        onClick: () => this.getNote(props.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Click Me\");\n    };\n\n    let nodes = [React.createElement(Node, {\n      id: \"vader\",\n      label: \"Darth Vader\",\n      decorator: Decorator,\n      content: \"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"luke\",\n      label: \"Luke Skywalker\",\n      decorator: Decorator,\n      content: \"This is the Galaxy's only hope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"leia\",\n      label: \"Leia Organa\",\n      decorator: Decorator,\n      content: \"This is the girl who is always counted out but comes up big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"han\",\n      label: \"Han Solo\",\n      decorator: Decorator,\n      content: \"What is this amateur hour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"chewy\",\n      label: \"Chewbacca\",\n      decorator: Decorator,\n      content: \"Ahhhhhhhhhhhhh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"obi\",\n      label: \"Obi-Wan Kenobi\",\n      decorator: Decorator,\n      content: \"Why did you try it Anakin? I had the high ground. And I've used that exact trick on Darth Maul which I must have told you about. Did you think I wouldn't see that shit coming? Come on young padawan.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"greedo\",\n      label: \"Greedo\",\n      decorator: Decorator,\n      content: \"The green guy who was just too slow for Han Solo. Or was I innacurate? Did I shoot or not? Idk George Lucas keeps editing my only scene\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"yoda\",\n      label: \"Yoda\",\n      decorator: Decorator,\n      content: \"That baby me am not. Look nothing like him, I did. More handsome I am.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"boba\",\n      label: \"Boba Fett\",\n      decorator: Decorator,\n      content: \"Still being digested to this day in The Great Pit of Carkoon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"jabba\",\n      label: \"Jabba The Hutt\",\n      decorator: Decorator,\n      content: \"Me want solo on my wall\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"lando\",\n      label: \"Lando Calrissian\",\n      decorator: Decorator,\n      content: \"I'm in it for the money, and the women, and the greater good, but definitely the money\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Node, {\n      id: \"emporer\",\n      label: \"Emporer Palpatine\",\n      decorator: Decorator,\n      content: \"This is the Dark Lord of the Sith\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })];\n    let edges = [React.createElement(Edge, {\n      id: \"0\",\n      from: \"yoda\",\n      to: \"chewy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"1\",\n      from: \"vader\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"2\",\n      from: \"vader\",\n      to: \"leia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"3\",\n      from: \"han\",\n      to: \"leia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"4\",\n      from: \"han\",\n      to: \"chewy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"5\",\n      from: \"obi\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"6\",\n      from: \"leia\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"7\",\n      from: \"vader\",\n      to: \"obi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"8\",\n      from: \"obi\",\n      to: \"yoda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"9\",\n      from: \"vader\",\n      to: \"yoda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"10\",\n      from: \"jabba\",\n      to: \"han\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"11\",\n      from: \"jabba\",\n      to: \"boba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"12\",\n      from: \"boba\",\n      to: \"han\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"13\",\n      from: \"han\",\n      to: \"greedo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"14\",\n      from: \"jabba\",\n      to: \"greedo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"15\",\n      from: \"yoda\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"16\",\n      from: \"emporer\",\n      to: \"vader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"17\",\n      from: \"emporer\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      id: \"18\",\n      from: \"lando\",\n      to: \"han\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })];\n    let items = [];\n    items.push(nodes.find(x => x.props.id === \"vader\"));\n\n    for (let i = 0; i < edges.length; i++) {\n      console.log(edges[i]);\n\n      if (edges[i].props.from == \"vader\") {\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.to));\n      } else if (edges[i].props.to == \"vader\") {\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.from));\n      }\n    }\n\n    this.state = {\n      id: \"vader\",\n      title: \"Darth Vader\",\n      note: \"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\",\n      nodes: nodes,\n      edges: edges,\n      items: items\n    };\n    this.setNote = this.setNote.bind(this);\n    this.getNote = this.getNote.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.computeItems = this.computeItems.bind(this);\n    console.log(this.state);\n  }\n\n  getNote(newId) {\n    /**\n     * Retreives the contents of a note and displays the contents in the NoteScreen \n     */\n    console.log(\"get\");\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    console.log(stateCopy);\n    let newNode = stateCopy.nodes.find(x => x.props.id === newId);\n    let items = this.computeItems(newId, stateCopy.nodes, stateCopy.edges);\n    console.log(items);\n    this.setState(state => ({\n      id: newNode.props.id,\n      title: newNode.props.label,\n      note: newNode.props.content,\n      nodes: stateCopy.nodes,\n      edges: stateCopy.edges,\n      items: items\n    }));\n  }\n\n  computeItems(id, nodes, edges) {\n    /**\n     * Computes the new items to be \n     */\n    let items = [];\n    items.push(nodes.find(x => x.props.id === id));\n\n    for (let i = 0; i < edges.length; i++) {\n      if (edges[i].props.from == id) {\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.to));\n      } else if (edges[i].props.to == id) {\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.from));\n      }\n    }\n\n    return items;\n  }\n\n  addNote(title) {\n    /**\n     * Adds a new node to the network \n     */\n    console.log(\"add\");\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    console.log(title);\n  }\n\n  setNote(newNote) {\n    /**\n     * Adds a new node to the network \n     */\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.nodes.find(x => x.props.id === stateCopy.id).props.content = newNote; // console.log(stateCopy);\n\n    this.setState(state => ({\n      id: stateCopy.id,\n      title: stateCopy.title,\n      note: newNote,\n      nodes: stateCopy.nodes,\n      edges: stateCopy.edges\n    }));\n  }\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"note-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      key: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(LeftBar, {\n      key: \"left\",\n      addNote: this.addNote,\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(DataScreen, {\n      key: \"data\",\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(NoteScreen, {\n      key: \"note\",\n      state: this.state,\n      setNote: this.setNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass TopBar extends Component {\n  /**\n   * This is the header of the application. displays name of application. later will be used to access login and account.\n   */\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"topbar-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Noteweb v0.0\")), React.createElement(\"div\", {\n      className: \"blank-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"account-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"log in\")));\n  }\n\n}\n\nclass LeftBar extends Component {\n  // Content on left side of screen\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\"\n    };\n  }\n\n  handleInput(input) {\n    console.log(input);\n    this.setState(state => ({\n      input: input\n    }));\n  }\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"leftbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      width: \"100%\",\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"New Note\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \" Title: \"), React.createElement(\"input\", {\n      name: \"noteTitle\",\n      className: \"input-title\",\n      onChange: e => this.handleInput(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      name: \"addNote\",\n      className: \"input-button\",\n      onClick: () => this.props.addNote(this.state.input),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Add Note\")));\n  }\n\n}\n\nclass DataScreen extends Component {\n  /**\n   * This screen displays the network of notes and allows selection of a note to be displayed in the NoteScreen\n   */\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      items: this.props.state.items\n    };\n    this.network = React.createElement(\"div\", {\n      className: \"datascreen-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Network, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.state.items));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"1\");\n    console.log(nextProps);\n    console.log(\"2\");\n    console.log(nextProps.state.items);\n    this.setState({\n      items: nextProps.state.items\n    });\n    console.log(\"3\");\n    console.log(this.state);\n  }\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"datascreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"HELLO\")), this.network);\n  }\n\n}\n\nclass NoteScreen extends Component {\n  /**\n   * This screen displays and allows editing of the content of notes in the graph\n   */\n  constructor(props) {\n    super(props); // this.decorator = this.props.decorator;\n    // this.handleChange = this.handleChange.bind(this);\n    // // this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"notescreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"notescreen-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \" \", this.props.state.title, \" \"), React.createElement(\"textarea\", {\n      name: \"noteInput\",\n      value: this.props.state.note,\n      onChange: e => this.props.setNote(e.target.value),\n      className: \"input-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(NoteWeb, {\n  key: \"main-app\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 283\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/index.js"],"names":["React","Component","ReactDOM","Network","Node","Edge","NoteWeb","constructor","props","state","id","title","note","console","log","Decorator","getNote","nodes","edges","items","push","find","x","i","length","from","to","setNote","bind","addNote","computeItems","newId","stateCopy","JSON","parse","stringify","newNode","setState","label","content","newNote","render","TopBar","LeftBar","input","handleInput","e","target","value","DataScreen","network","componentWillReceiveProps","nextProps","NoteScreen","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass NoteWeb extends Component {\n  /**\n   * This is the main application. Creates a network of nodes for note taking, rather than a linear set of notes. \n   * Will use machine learning on back end to automatically link notes to each other\n   */\n  constructor(props) {\n  /**\n   * Constructor for Noteweb application. Initializes nodes and edges for graph. initializes the state. binds functions. \n   */\n    super(props);\n    this.state = {id: \"None\",  title: \"Title\", note: \"This is where your note is displayed\"};\n    console.log(this.note)\n    const Decorator = props => {\n      return (\n        <button\n          onClick={() => this.getNote(props.id)}\n        >\n          Click Me\n        </button>\n      );\n    };\n    let nodes = [\n      <Node id=\"vader\" label=\"Darth Vader\" decorator={Decorator} content=\"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\"/>,\n      <Node id=\"luke\" label=\"Luke Skywalker\" decorator={Decorator} content=\"This is the Galaxy's only hope\"/>,\n      <Node id=\"leia\" label=\"Leia Organa\" decorator={Decorator} content=\"This is the girl who is always counted out but comes up big\"/>,\n      <Node id=\"han\" label=\"Han Solo\" decorator={Decorator} content=\"What is this amateur hour\"/>,\n      <Node id=\"chewy\" label=\"Chewbacca\" decorator={Decorator} content=\"Ahhhhhhhhhhhhh\"/>,\n      <Node id=\"obi\" label=\"Obi-Wan Kenobi\" decorator={Decorator} content=\"Why did you try it Anakin? I had the high ground. And I've used that exact trick on Darth Maul which I must have told you about. Did you think I wouldn't see that shit coming? Come on young padawan.\"/>,\n      <Node id=\"greedo\" label=\"Greedo\" decorator={Decorator} content=\"The green guy who was just too slow for Han Solo. Or was I innacurate? Did I shoot or not? Idk George Lucas keeps editing my only scene\"/>,\n      <Node id=\"yoda\" label=\"Yoda\" decorator={Decorator} content=\"That baby me am not. Look nothing like him, I did. More handsome I am.\"/>,\n      <Node id=\"boba\" label=\"Boba Fett\" decorator={Decorator} content=\"Still being digested to this day in The Great Pit of Carkoon\"/>,\n      <Node id=\"jabba\" label=\"Jabba The Hutt\" decorator={Decorator} content=\"Me want solo on my wall\"/>,\n      <Node id=\"lando\" label=\"Lando Calrissian\" decorator={Decorator} content=\"I'm in it for the money, and the women, and the greater good, but definitely the money\"/>,\n      <Node id=\"emporer\" label=\"Emporer Palpatine\" decorator={Decorator} content=\"This is the Dark Lord of the Sith\"/>\n    ];\n    let edges = [\n      <Edge id=\"0\" from=\"yoda\" to=\"chewy\" />,\n      <Edge id=\"1\" from=\"vader\" to=\"luke\" />,\n      <Edge id=\"2\" from=\"vader\" to=\"leia\" />,\n      <Edge id=\"3\" from=\"han\" to=\"leia\" />,\n      <Edge id=\"4\" from=\"han\" to=\"chewy\" />,\n      <Edge id=\"5\" from=\"obi\" to=\"luke\" />,\n      <Edge id=\"6\" from=\"leia\" to=\"luke\" />,\n      <Edge id=\"7\" from=\"vader\" to=\"obi\" />,\n      <Edge id=\"8\" from=\"obi\" to=\"yoda\" />,\n      <Edge id=\"9\" from=\"vader\" to=\"yoda\" />,\n      <Edge id=\"10\" from=\"jabba\" to=\"han\" />,\n      <Edge id=\"11\" from=\"jabba\" to=\"boba\" />,\n      <Edge id=\"12\" from=\"boba\" to=\"han\" />,\n      <Edge id=\"13\" from=\"han\" to=\"greedo\" />,\n      <Edge id=\"14\" from=\"jabba\" to=\"greedo\" />,\n      <Edge id=\"15\" from=\"yoda\" to=\"luke\" />,\n      <Edge id=\"16\" from=\"emporer\" to=\"vader\" />,\n      <Edge id=\"17\" from=\"emporer\" to=\"luke\" />,\n      <Edge id=\"18\" from=\"lando\" to=\"han\" />\n    ];\n    let items = [];\n    items.push(nodes.find(x => x.props.id === \"vader\"));\n    for (let i = 0; i < edges.length; i++) {\n      console.log(edges[i]);\n      if(edges[i].props.from == \"vader\"){\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.to));\n      }else if(edges[i].props.to == \"vader\"){\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.from));\n      }\n    }\n    this.state = {id: \"vader\",  title: \"Darth Vader\", note: \"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\", nodes: nodes, edges: edges, items:items};\n    this.setNote = this.setNote.bind(this);\n    this.getNote = this.getNote.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.computeItems = this.computeItems.bind(this);\n    console.log(this.state);\n  }\n  \n  getNote(newId){\n    /**\n     * Retreives the contents of a note and displays the contents in the NoteScreen \n     */\n    console.log(\"get\")\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    console.log(stateCopy);\n    let newNode = stateCopy.nodes.find(x => x.props.id === newId);\n    let items = this.computeItems(newId, stateCopy.nodes, stateCopy.edges);\n    console.log(items);\n    this.setState(state => ({\n        id:newNode.props.id,\n        title: newNode.props.label,\n        note: newNode.props.content,\n        nodes: stateCopy.nodes,\n        edges: stateCopy.edges,\n        items: items\n      }));\n  }\n  \n  computeItems(id, nodes, edges){\n    /**\n     * Computes the new items to be \n     */\n    let items = [];\n    items.push(nodes.find(x => x.props.id === id));\n    for (let i = 0; i < edges.length; i++) {\n      if(edges[i].props.from == id){\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.to));\n      }else if(edges[i].props.to == id){\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.from));\n      }\n    }\n    return items;\n  }\n  \n  addNote(title){\n    /**\n     * Adds a new node to the network \n     */\n    console.log(\"add\")\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    console.log(title);\n  }\n  \n  setNote(newNote){\n    /**\n     * Adds a new node to the network \n     */\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.nodes.find(x => x.props.id === stateCopy.id).props.content = newNote;\n    // console.log(stateCopy);\n    this.setState(state => ({\n        id:stateCopy.id,\n        title: stateCopy.title,\n        note: newNote,\n        nodes: stateCopy.nodes,\n        edges: stateCopy.edges\n      }));\n  }\n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"note-web\">\n        <TopBar key=\"top\"/>\n        <div className=\"main-content\">\n          <LeftBar key=\"left\" addNote={this.addNote} state={this.state}/>\n          <DataScreen key=\"data\" state={this.state} />\n          <NoteScreen key=\"note\" state={this.state} setNote={this.setNote}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TopBar extends Component {\n  /**\n   * This is the header of the application. displays name of application. later will be used to access login and account.\n   */\n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"topbar\">\n        <div className=\"topbar-content\">\n          <h3>Noteweb v0.0</h3>\n        </div>\n        <div className=\"blank-space\">\n        </div>\n        <div className=\"account\">\n          <h3 className=\"account-content\">log in</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass LeftBar extends Component {\n  // Content on left side of screen\n  constructor(props) {\n    super(props);\n    this.state = {input:\"\"}\n  }\n  \n  handleInput(input){\n    console.log(input);\n    this.setState(state => ({input:input}))\n  }\n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"leftbar\">\n        <div width=\"100%\" height=\"100%\">\n          <h3>New Note</h3>\n          <p> Title: </p>\n          <input name=\"noteTitle\" className=\"input-title\" onChange={(e) => this.handleInput(e.target.value)}/>\n          <button name=\"addNote\" className=\"input-button\" onClick={() => this.props.addNote(this.state.input)}>Add Note</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass DataScreen extends Component {\n  /**\n   * This screen displays the network of notes and allows selection of a note to be displayed in the NoteScreen\n   */\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = {items:this.props.state.items};\n    this.network = <div className=\"datascreen-content\"><Network>{this.state.items}</Network></div>;\n  } \n  \n  componentWillReceiveProps(nextProps) {\n    console.log(\"1\")\n    console.log(nextProps);\n    console.log(\"2\")\n    console.log(nextProps.state.items);\n    this.setState({ items: nextProps.state.items});\n    console.log(\"3\")\n    console.log(this.state);\n  }\n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"datascreen\">\n        <div>\n          <p>HELLO</p>\n        </div>\n        {this.network}\n      </div>\n    );\n  }\n}\n\nclass NoteScreen extends Component {\n  /**\n   * This screen displays and allows editing of the content of notes in the graph\n   */\n  constructor(props){\n    super(props);\n    // this.decorator = this.props.decorator;\n    // this.handleChange = this.handleChange.bind(this);\n    // // this.handleClick = this.handleClick.bind(this);\n  }\n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return(\n      <div className=\"notescreen\">\n        {/* <p>Some main datascreen stuff</p> */}\n        <div className=\"notescreen-content\">\n          <h3> {this.props.state.title} </h3>\n          <textarea name=\"noteInput\" value={this.props.state.note} onChange={(e) => this.props.setNote(e.target.value)} className=\"input-note\"/>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\n// ========================================\n\nReactDOM.render(\n  <NoteWeb key=\"main-app\"/>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}