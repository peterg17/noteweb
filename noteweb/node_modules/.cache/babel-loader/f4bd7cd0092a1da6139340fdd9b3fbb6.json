{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/GraphWrapper.js\";\nimport React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport Graph from 'react-graph-vis';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class GraphWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    var graph = {\n      nodes: [{\n        id: 1,\n        label: '1'\n      }],\n      edges: []\n    };\n    this.state = {\n      options: {},\n      graph: graph\n    };\n  }\n\n  addNode() {\n    var nodesCopy = this.state.graph.nodes.slice(); // this will create a copy with the same items\n\n    nodesCopy.push({\n      id: 2,\n      label: '2'\n    });\n    this.setState({\n      graph: {\n        nodes: nodesCopy,\n        edges: []\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Graph, {\n      graph: this.state.graph,\n      options: this.state.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addNode.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Add Node\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/GraphWrapper.js"],"names":["React","Component","Network","Node","Edge","Graph","GraphWrapper","constructor","props","graph","nodes","id","label","edges","state","options","addNode","nodesCopy","slice","push","setState","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0CAAP;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AAEA,eAAe,MAAMC,YAAN,SAA2BN,KAAK,CAACC,SAAjC,CAA2C;AACtDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACD,QAAIC,KAAK,GAAG;AAACC,MAAAA,KAAK,EAAE,CAAC;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAAD,CAAR;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAAZ;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,OAAO,EAAE,EADC;AAEVN,MAAAA,KAAK,EAAEA;AAFG,KAAb;AAIF;;AAEDO,EAAAA,OAAO,GAAG;AACN,QAAIC,SAAS,GAAG,KAAKH,KAAL,CAAWL,KAAX,CAAiBC,KAAjB,CAAuBQ,KAAvB,EAAhB,CADM,CAC0C;;AAChDD,IAAAA,SAAS,CAACE,IAAV,CAAe;AAACR,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE;AAAf,KAAf;AACA,SAAKQ,QAAL,CAAc;AAAEX,MAAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAEO,SAAR;AAAmBJ,QAAAA,KAAK,EAAE;AAA1B;AAAT,KAAd;AACF;;AAEFQ,EAAAA,MAAM,GAAG;AACN,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWL,KAAzB;AAAgC,MAAA,OAAO,EAAE,KAAKK,KAAL,CAAWC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG;AAAQ,MAAA,OAAO,EAAE,KAAKC,OAAL,CAAaM,IAAb,CAAkB,IAAlB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,CAAP;AAIF;;AArBqD","sourcesContent":["import React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport Graph from 'react-graph-vis'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class GraphWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n       var graph = {nodes: [{id: 1, label: '1'}], edges: []};\n       this.state = {\n          options: {},\n          graph: graph\n       };\n    }\n \n    addNode() {\n        var nodesCopy = this.state.graph.nodes.slice(); // this will create a copy with the same items\n        nodesCopy.push({id: 2, label: '2'});\n        this.setState({ graph: {nodes: nodesCopy, edges: []}});\n     }\n \n    render() {\n       return <div>\n                 <Graph graph={this.state.graph} options={this.state.options}/>\n                 <button onClick={this.addNode.bind(this)}>Add Node</button>\n              </div>;\n    }\n }"]},"metadata":{},"sourceType":"module"}