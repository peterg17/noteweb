{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Graph from \"vis-react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nvar graph = {\n  nodes: [{\n    id: 1,\n    label: 'Node 1'\n  }, {\n    id: 2,\n    label: 'Node 2'\n  }, {\n    id: 3,\n    label: 'Node 3'\n  }, {\n    id: 4,\n    label: 'Node 4'\n  }, {\n    id: 5,\n    label: 'Node 5'\n  }],\n  edges: [{\n    from: 1,\n    to: 2\n  }, {\n    from: 1,\n    to: 3\n  }, {\n    from: 2,\n    to: 4\n  }, {\n    from: 2,\n    to: 5\n  }]\n};\nvar options = {\n  layout: {\n    hierarchical: true\n  },\n  edges: {\n    color: '#000000'\n  }\n};\nvar events = {\n  select: function (event) {\n    var nodes = event.nodes,\n        edges = event.edges;\n  }\n};\nReact.render(React.createElement(Graph, {\n  graph: graph,\n  options: options,\n  events: events // style={style}\n  ,\n  getNetwork: this.getNetwork,\n  getEdges: this.getEdges,\n  getNodes: this.getNodes,\n  vis: vis => this.vis = vis,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), document.body); // const nodes = [\n//   { x: 50, y: 20 },\n//   { x: 200, y: 300 },\n//   { x: 300, y: 40 }\n// ];\n// \n// const links = [\n//   { source: nodes[0], target: nodes[1] },\n//   { source: nodes[1], target: nodes[2] },\n//   { source: nodes[2], target: nodes[0] }\n// ];\n// \n// const graph = {\n//   nodes,\n//   links\n// };\n// \n// class NoteWeb extends React.Component {\n//   // This is the main container for all content\n//   render() {\n//     return (\n//       <div className=\"noteweb\">\n//         <TopBar />\n//         <Main />\n//       </div>\n//     );\n//   }\n// }\n// \n// class TopBar extends React.Component {\n//   // This is the header of the application\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"container\">\n//           <div className=\"topbar\">\n//             <h1>Noteweb v0.0</h1>\n//           </div>\n//           <div className=\"account\">\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// \n// class Main extends React.Component {\n//   // This is the main content of the application, and holds the left side bar and the notes display\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <LeftBar />\n//         <div className=\"main-content\">\n//           <DataScreen />\n//           <NoteScreen />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// \n// class LeftBar extends React.Component {\n//   // Content on left side of screen\n//   render() {\n//     return (\n//       <div className=\"leftbar\">\n//         <p>Some leftbar stuff</p>\n//       </div>\n//     );\n//   }\n// }\n// \n// class DataScreen extends React.Component {\n//   //The notes graph display\n//   attachZoom() {\n//     console.log(\"hi\");\n//   }\n// \n//   render() {\n//     return (\n//       <div className=\"datascreen\">\n//         {/* <p>Some main datascreen stuff</p> */}\n//         <svg width=\"100%\" height=\"100%\">\n//           // <rect width={500} height={500} rx={14} fill=\"#272b4d\" />\n//           <Graph graph={graph} />\n//         </svg>\n//       </div>\n//     );\n//   }\n// }\n// \n// class NoteScreen extends React.Component {\n//   // the note content display\n//   render() {\n//     return(\n//       <div className=\"notescreen\">\n//         {/* <p>Some main datascreen stuff</p> */}\n//         <container width=\"100%\" height=\"100%\">\n//           <h3> Note Title </h3>\n//           <p> note content </p>\n//         </container>\n//       </div>\n//     );\n//   }\n// \n// }\n// \n// // ========================================\n// \n// ReactDOM.render(\n//   <NoteWeb />,\n//   document.getElementById('root')\n// );","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/index.js"],"names":["React","Component","Fragment","Graph","ReactDOM","graph","nodes","id","label","edges","from","to","options","layout","hierarchical","color","events","select","event","render","getNetwork","getEdges","getNodes","vis","document","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GADG,EAEH;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAFG,EAGH;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAHG,EAIH;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAJG,EAKH;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE;AAAhB,GALG,CADC;AAQRC,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,EAAE,EAAE;AAAf,GAAD,EAAqB;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,EAAE,EAAE;AAAf,GAArB,EAAyC;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,EAAE,EAAE;AAAf,GAAzC,EAA6D;AAAED,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,EAAE,EAAE;AAAf,GAA7D;AARC,CAAZ;AAWA,IAAIC,OAAO,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,YAAY,EAAE;AADV,GADE;AAIVL,EAAAA,KAAK,EAAE;AACHM,IAAAA,KAAK,EAAE;AADJ;AAJG,CAAd;AASA,IAAIC,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAE,UAASC,KAAT,EAAgB;AAAA,QACdZ,KADc,GACGY,KADH,CACdZ,KADc;AAAA,QACPG,KADO,GACGS,KADH,CACPT,KADO;AAEvB;AAHQ,CAAb;AAMAT,KAAK,CAACmB,MAAN,CACI,oBAAC,KAAD;AACI,EAAA,KAAK,EAAEd,KADX;AAEI,EAAA,OAAO,EAAEO,OAFb;AAGI,EAAA,MAAM,EAAEI,MAHZ,CAII;AAJJ;AAKI,EAAA,UAAU,EAAE,KAAKI,UALrB;AAMI,EAAA,QAAQ,EAAE,KAAKC,QANnB;AAOI,EAAA,QAAQ,EAAE,KAAKC,QAPnB;AAQI,EAAA,GAAG,EAAEC,GAAG,IAAK,KAAKA,GAAL,GAAWA,GAR5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAWIC,QAAQ,CAACC,IAXb,E,CAesourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Graph from \"vis-react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar graph = {\n    nodes: [\n        { id: 1, label: 'Node 1' },\n        { id: 2, label: 'Node 2' },\n        { id: 3, label: 'Node 3' },\n        { id: 4, label: 'Node 4' },\n        { id: 5, label: 'Node 5' }\n    ],\n    edges: [{ from: 1, to: 2 }, { from: 1, to: 3 }, { from: 2, to: 4 }, { from: 2, to: 5 }]\n};\n\nvar options = {\n    layout: {\n        hierarchical: true\n    },\n    edges: {\n        color: '#000000'\n    }\n};\n\nvar events = {\n    select: function(event) {\n        var { nodes, edges } = event;\n    }\n};\n\nReact.render(\n    <Graph\n        graph={graph}\n        options={options}\n        events={events}\n        // style={style}\n        getNetwork={this.getNetwork}\n        getEdges={this.getEdges}\n        getNodes={this.getNodes}\n        vis={vis => (this.vis = vis)}\n    />,\n    document.body\n);\n\n\n// const nodes = [\n//   { x: 50, y: 20 },\n//   { x: 200, y: 300 },\n//   { x: 300, y: 40 }\n// ];\n// \n// const links = [\n//   { source: nodes[0], target: nodes[1] },\n//   { source: nodes[1], target: nodes[2] },\n//   { source: nodes[2], target: nodes[0] }\n// ];\n// \n// const graph = {\n//   nodes,\n//   links\n// };\n// \n// class NoteWeb extends React.Component {\n//   // This is the main container for all content\n//   render() {\n//     return (\n//       <div className=\"noteweb\">\n//         <TopBar />\n//         <Main />\n//       </div>\n//     );\n//   }\n// }\n// \n// class TopBar extends React.Component {\n//   // This is the header of the application\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"container\">\n//           <div className=\"topbar\">\n//             <h1>Noteweb v0.0</h1>\n//           </div>\n//           <div className=\"account\">\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// \n// class Main extends React.Component {\n//   // This is the main content of the application, and holds the left side bar and the notes display\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <LeftBar />\n//         <div className=\"main-content\">\n//           <DataScreen />\n//           <NoteScreen />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// \n// class LeftBar extends React.Component {\n//   // Content on left side of screen\n//   render() {\n//     return (\n//       <div className=\"leftbar\">\n//         <p>Some leftbar stuff</p>\n//       </div>\n//     );\n//   }\n// }\n// \n// class DataScreen extends React.Component {\n//   //The notes graph display\n//   attachZoom() {\n//     console.log(\"hi\");\n//   }\n// \n//   render() {\n//     return (\n//       <div className=\"datascreen\">\n//         {/* <p>Some main datascreen stuff</p> */}\n//         <svg width=\"100%\" height=\"100%\">\n//           // <rect width={500} height={500} rx={14} fill=\"#272b4d\" />\n//           <Graph graph={graph} />\n//         </svg>\n//       </div>\n//     );\n//   }\n// }\n// \n// class NoteScreen extends React.Component {\n//   // the note content display\n//   render() {\n//     return(\n//       <div className=\"notescreen\">\n//         {/* <p>Some main datascreen stuff</p> */}\n//         <container width=\"100%\" height=\"100%\">\n//           <h3> Note Title </h3>\n//           <p> note content </p>\n//         </container>\n//       </div>\n//     );\n//   }\n// \n// }\n// \n// // ========================================\n// \n// ReactDOM.render(\n//   <NoteWeb />,\n//   document.getElementById('root')\n// );\n"]},"metadata":{},"sourceType":"module"}