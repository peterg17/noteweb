{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/DataScreen.js\";\nimport React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport Graph from 'react-graph-vis';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class DataScreen extends Component {\n  /**\n   * This screen displays the network of notes and allows selection of a note to be displayed in the NoteScreen\n   */\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      items: this.props.state.items,\n      graph: this.props.state.graph,\n      getnote: this.props.getNote\n    };\n    this.options = {\n      layout: {\n        hierarchical: false\n      },\n      edges: {\n        color: \"#FFFFFF\"\n      },\n      height: \"500px\"\n    };\n    this.events = {\n      select: function (event) {\n        console.log(event);\n        console.log(this.state);\n        var nodes = event.nodes,\n            edges = event.edges;\n        this.props.getNote(event.nodes[0]);\n        console.log(nodes[0]);\n        console.log(edges);\n      }\n    }; // Don't call this.setState() here!\n\n    console.log(this.props.state.graph);\n    this.state = {\n      items: this.props.state.items,\n      graph: this.props.state.graph\n    }; // this.network = <div className=\"datascreen-content\"><Graph graph={this.state.graph} options={options} events={events} /></div>;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    /*\n    * Might help propogate state change down to child from parent\n    */\n    console.log(\"1\");\n    console.log(nextProps);\n    console.log(\"2\");\n    console.log(nextProps.state.items);\n    this.setState({\n      items: nextProps.state.items\n    });\n    console.log(\"3\");\n    console.log(this.state);\n    console.log(this.network);\n  }\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"datascreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"HELLO\")), React.createElement(Graph, {\n      graph: this.state.graph,\n      options: this.options,\n      events: this.events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/DataScreen.js"],"names":["React","Component","Network","Node","Edge","Graph","DataScreen","constructor","props","console","log","state","items","graph","getnote","getNote","options","layout","hierarchical","edges","color","height","events","select","event","nodes","componentWillReceiveProps","nextProps","setState","network","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0CAAP;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AAEA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAChD;;;AAGAM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKG,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC,KAAKJ,KAAL,CAAWG,KAAX,CAAiBC,KAAxB;AAA+BC,MAAAA,KAAK,EAAC,KAAKL,KAAL,CAAWG,KAAX,CAAiBE,KAAtD;AAA6DC,MAAAA,OAAO,EAAC,KAAKN,KAAL,CAAWO;AAAhF,KAAb;AAEA,SAAKC,OAAL,GAAe;AACbC,MAAAA,MAAM,EAAE;AACNC,QAAAA,YAAY,EAAE;AADR,OADK;AAIbC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AADF,OAJM;AAObC,MAAAA,MAAM,EAAE;AAPK,KAAf;AAUA,SAAKC,MAAL,GAAc;AACZC,MAAAA,MAAM,EAAE,UAASC,KAAT,EAAgB;AACtBf,QAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAFsB,YAGhBc,KAHgB,GAGCD,KAHD,CAGhBC,KAHgB;AAAA,YAGTN,KAHS,GAGCK,KAHD,CAGTL,KAHS;AAItB,aAAKX,KAAL,CAAWO,OAAX,CAAmBS,KAAK,CAACC,KAAN,CAAY,CAAZ,CAAnB;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,KAAK,CAAC,CAAD,CAAjB;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD;AARW,KAAd,CAfiB,CAyBjB;;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,KAAX,CAAiBE,KAA7B;AACA,SAAKF,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC,KAAKJ,KAAL,CAAWG,KAAX,CAAiBC,KAAxB;AAA+BC,MAAAA,KAAK,EAAC,KAAKL,KAAL,CAAWG,KAAX,CAAiBE;AAAtD,KAAb,CA3BiB,CA4BjB;AACD;;AAEDa,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC;;;AAGAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYiB,SAAZ;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYiB,SAAS,CAAChB,KAAV,CAAgBC,KAA5B;AACA,SAAKgB,QAAL,CAAc;AAAEhB,MAAAA,KAAK,EAAEe,SAAS,CAAChB,KAAV,CAAgBC;AAAzB,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKmB,OAAjB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;;;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,KADpB;AAEE,MAAA,OAAO,EAAE,KAAKG,OAFhB;AAGE,MAAA,MAAM,EAAE,KAAKM,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAYD;;AAjE+C","sourcesContent":["import React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport Graph from 'react-graph-vis'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class DataScreen extends Component {\n  /**\n   * This screen displays the network of notes and allows selection of a note to be displayed in the NoteScreen\n   */\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {items:this.props.state.items, graph:this.props.state.graph, getnote:this.props.getNote};\n    \n    this.options = {\n      layout: {\n        hierarchical: false\n      },\n      edges: {\n        color: \"#FFFFFF\"\n      },\n      height: \"500px\"\n    };\n   \n    this.events = {\n      select: function(event) {\n        console.log(event)\n        console.log(this.state);\n        var { nodes, edges } = event;\n        this.props.getNote(event.nodes[0]);\n        console.log(nodes[0]);\n        console.log(edges);\n      }\n    };\n    // Don't call this.setState() here!\n    console.log(this.props.state.graph);\n    this.state = {items:this.props.state.items, graph:this.props.state.graph};\n    // this.network = <div className=\"datascreen-content\"><Graph graph={this.state.graph} options={options} events={events} /></div>;\n  } \n  \n  componentWillReceiveProps(nextProps) {\n    /*\n    * Might help propogate state change down to child from parent\n    */\n    console.log(\"1\")\n    console.log(nextProps);\n    console.log(\"2\")\n    console.log(nextProps.state.items);\n    this.setState({ items: nextProps.state.items});\n    console.log(\"3\")\n    console.log(this.state);\n    console.log(this.network);\n  }\n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"datascreen\">\n        <div>\n          <p>HELLO</p>\n        </div>\n        <Graph\n          graph={this.state.graph}\n          options={this.options}\n          events={this.events}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}