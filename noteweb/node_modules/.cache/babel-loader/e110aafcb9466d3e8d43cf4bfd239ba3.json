{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/NoteWeb.js\";\nimport React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { ForceGraphNode, ForceGraphLink } from 'react-vis-force';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NoteScreen from './NoteScreen.js';\nimport DataScreen from './DataScreen.js';\nimport TopBar from './TopBar.js';\nimport LeftBar from './LeftBar.js';\nexport default class NoteWeb extends Component {\n  /**\n   * This is the main application. Creates a network of nodes for note taking, rather than a linear set of notes. \n   * Will use machine learning on back end to automatically link notes to each other\n   */\n  constructor(props) {\n    /**\n     * Constructor for Noteweb application. Initializes nodes and edges for graph. initializes the state. binds functions. \n     */\n    super(props);\n    this.state = {\n      id: \"None\",\n      title: \"Title\",\n      note: \"This is where your note is displayed\"\n    }; // let nodes = [\n    //   <Node key=\"vader\" id= \"vader\" label=\"Darth Vader\" content=\"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\"/>,\n    //   <Node key=\"luke\" id= \"luke\" label=\"Luke Skywalker\" content=\"This is the Galaxy's only hope\"/>,\n    //   <Node key=\"leia\" id= \"leia\" label=\"Leia Organa\" content=\"This is the girl who is always counted out but comes up big\"/>,\n    //   <Node key=\"han\" id= \"han\" label=\"Han Solo\" content=\"What is this amateur hour\"/>,\n    //   <Node key=\"chewy\" id= \"chewy\" label=\"Chewbacca\" content=\"Ahhhhhhhhhhhhh\"/>,\n    //   <Node key=\"obi\" id= \"obi\" label=\"Obi-Wan Kenobi\" content=\"Why did you try it Anakin? I had the high ground. And I've used that exact trick on Darth Maul which I must have told you about. Did you think I wouldn't see that shit coming? Come on young padawan.\"/>,\n    //   <Node key=\"greedo\" id= \"greedo\" label=\"Greedo\" content=\"The green guy who was just too slow for Han Solo. Or was I innacurate? Did I shoot or not? Idk George Lucas keeps editing my only scene\"/>,\n    //   <Node key=\"yoda\" id= \"yoda\" label=\"Yoda\" content=\"That baby me am not. Look nothing like him, I did. More handsome I am.\"/>,\n    //   <Node key=\"boba\" id= \"boba\" label=\"Boba Fett\" content=\"Still being digested to this day in The Great Pit of Carkoon\"/>,\n    //   <Node key=\"jabba\" id= \"jabba\" label=\"Jabba The Hutt\" content=\"Me want solo on my wall\"/>,\n    //   <Node key=\"lando\" id= \"lando\" label=\"Lando Calrissian\" content=\"I'm in it for the money, and the women, and the greater good, but definitely the money\"/>,\n    //   <Node key=\"emporer\" id= \"emporer\" label=\"Emporer Palpatine\" content=\"This is the Dark Lord of the Sith\"/>\n    // ];\n    // let edges = [\n    //   <Edge key=\"0\" id= \"0\" source=\"yoda\" to=\"chewy\" />,\n    //   <Edge key=\"1\" id= \"1\" source=\"vader\" to=\"luke\" />,\n    //   <Edge key=\"2\" id= \"2\" source=\"vader\" to=\"leia\" />,\n    //   <Edge key=\"3\" id= \"3\" source=\"han\" to=\"leia\" />,\n    //   <Edge key=\"4\" id= \"4\" source=\"han\" to=\"chewy\" />,\n    //   <Edge key=\"5\" id= \"5\" source=\"obi\" to=\"luke\" />,\n    //   <Edge key=\"6\" id= \"6\" source=\"leia\" to=\"luke\" />,\n    //   <Edge key=\"7\" id= \"7\" source=\"vader\" to=\"obi\" />,\n    //   <Edge key=\"8\" id= \"8\" source=\"obi\" to=\"yoda\" />,\n    //   <Edge key=\"9\" id= \"9\" source=\"vader\" to=\"yoda\" />,\n    //   <Edge key=\"10\" id= \"10\" source=\"jabba\" to=\"han\" />,\n    //   <Edge key=\"11\" id= \"11\" source=\"jabba\" to=\"boba\" />,\n    //   <Edge key=\"12\" id= \"12\" source=\"boba\" to=\"han\" />,\n    //   <Edge key=\"13\" id= \"13\" source=\"han\" to=\"greedo\" />,\n    //   <Edge key=\"14\" id= \"14\" source=\"jabba\" to=\"greedo\" />,\n    //   <Edge key=\"15\" id= \"15\" source=\"yoda\" to=\"luke\" />,\n    //   <Edge key=\"16\" id= \"16\" source=\"emporer\" to=\"vader\" />,\n    //   <Edge key=\"17\" id= \"17\" source=\"emporer\" to=\"luke\" />,\n    //   <Edge key=\"18\" id= \"18\" source=\"lando\" to=\"han\" />\n    // ];\n\n    let nodes = [React.createElement(ForceGraphNode, {\n      node: {\n        key: \"vader\",\n        id: \"vader\",\n        label: \"Darth Vader\",\n        content: \"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\"\n      },\n      fill: \"red\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"luke\",\n        id: \"luke\",\n        label: \"Luke Skywalker\",\n        content: \"This is the Galaxy's only hope.\"\n      },\n      fill: \"blue\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"leia\",\n        id: \"leia\",\n        label: \"Leia Organa\",\n        content: \"This is the girl who is always counted out but comes up big.\"\n      },\n      fill: \"red\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"han\",\n        id: \"han\",\n        label: \"Han Solo\",\n        content: \"What is this amateur hour?\"\n      },\n      fill: \"blue\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"chewy\",\n        id: \"chewy\",\n        label: \"Chewbacca\",\n        content: \"Ahhhhhhhhhhhhh!\"\n      },\n      fill: \"red\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"obi\",\n        id: \"obi\",\n        label: \"Obi-Wan Kenobi\",\n        content: \"Why did you try it Anakin? I had the high ground. And I've used that exact trick on Darth Maul which I must have told you about. Did you think I wouldn't see that shit coming? Come on young padawan.\"\n      },\n      fill: \"blue\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"greedo\",\n        id: \"greedo\",\n        label: \"Greedo\",\n        content: \"The green guy who was just too slow for Han Solo. Or was I innacurate? Did I shoot or not? Idk George Lucas keeps editing my only scene\"\n      },\n      fill: \"red\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"yoda\",\n        id: \"yoda\",\n        label: \"Yoda\",\n        content: \"That baby me am not. Look nothing like him, I did. More handsome I am.\"\n      },\n      fill: \"blue\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"boba\",\n        id: \"boba\",\n        label: \"Boba Fett\",\n        content: \"Still being digested to this day in The Great Pit of Carkoon\"\n      },\n      fill: \"red\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"jabba\",\n        id: \"jabba\",\n        label: \"Jabba The Hutt\",\n        content: \"Me want solo on my wall.\"\n      },\n      fill: \"blue\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"lando\",\n        id: \"lando\",\n        label: \"Lando Calrissian\",\n        content: \"I'm in it for the money, and the women, and the greater good, but definitely the money.\"\n      },\n      fill: \"red\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ForceGraphNode, {\n      node: {\n        key: \"emporer\",\n        id: \"emporer\",\n        label: \"Emporer Palpatine\",\n        content: \"This is the Dark Lord of the Sith\"\n      },\n      fill: \"blue\",\n      zoomable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })];\n    let links = [React.createElement(ForceGraphLink, {\n      link: {\n        key: \"0\",\n        id: \"0\",\n        source: \"yoda\",\n        target: \"chewy\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"1\",\n        id: \"1\",\n        source: \"vader\",\n        target: \"luke\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"2\",\n        id: \"2\",\n        source: \"vader\",\n        target: \"leia\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"3\",\n        id: \"3\",\n        source: \"han\",\n        target: \"leia\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"4\",\n        id: \"4\",\n        source: \"han\",\n        target: \"chewy\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"5\",\n        id: \"5\",\n        source: \"obi\",\n        target: \"luke\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"6\",\n        id: \"6\",\n        source: \"leia\",\n        target: \"luke\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"7\",\n        id: \"7\",\n        source: \"vader\",\n        target: \"obi\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"8\",\n        id: \"8\",\n        source: \"obi\",\n        target: \"yoda\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"9\",\n        id: \"9\",\n        source: \"vader\",\n        target: \"yoda\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"10\",\n        id: \"10\",\n        source: \"jabba\",\n        target: \"han\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"11\",\n        id: \"11\",\n        source: \"jabba\",\n        target: \"boba\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"12\",\n        id: \"12\",\n        source: \"boba\",\n        target: \"han\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"13\",\n        id: \"13\",\n        source: \"han\",\n        target: \"greedo\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"14\",\n        id: \"14\",\n        source: \"jabba\",\n        target: \"greedo\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"15\",\n        id: \"15\",\n        source: \"yoda\",\n        target: \"luke\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"16\",\n        id: \"16\",\n        source: \"emporer\",\n        target: \"vader\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"17\",\n        id: \"17\",\n        source: \"emporer\",\n        target: \"luke\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(ForceGraphLink, {\n      link: {\n        key: \"18\",\n        id: \"18\",\n        source: \"lando\",\n        target: \"han\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })];\n    this.setNote = this.setNote.bind(this);\n    this.getNote = this.getNote.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.computeItems = this.computeItems.bind(this); // let graph = {nodes:[],edges:[]};\n    // graph.nodes.push(nodes.find(x => x.id === \"vader\"));\n    // for (let i = 0; i < edges.length; i++) {\n    //   if(edges[i].source === \"vader\"){\n    //     graph.edges.push(edges[i]);\n    //     graph.nodes.push(nodes.find(x => x.id === edges[i].target));\n    //   }else if(edges[i].target === \"vader\"){\n    //     graph.edges.push(edges[i]);\n    //     graph.nodes.push(nodes.find(x => x.id === edges[i].source));\n    //   }\n    // }\n\n    let items = this.computeItems(\"vader\", nodes, links);\n    let thisItem = items.nodes[0].props.node;\n    console.log(\"thisItem\");\n    console.log(thisItem);\n    this.state = {\n      selectedNode: thisItem,\n      id: thisItem.id,\n      title: thisItem.label,\n      note: thisItem.content,\n      nodes: nodes,\n      links: links,\n      items: items\n    }; //, graph:graph};\n    // this.state = {id: thisItem.props.id,  title: thisItem.props.label, note: thisItem.props.content, nodes: nodes, edges: edges, items:items, graph:{nodes:nodes, edges:edges}};\n  }\n\n  getNote(newId) {\n    /**\n     * Retreives the contents of a note and displays the contents in the NoteScreen \n     */\n    console.log(\"get\");\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    let newNode = stateCopy.nodes.find(x => x.props.node.id === newId);\n    let computedItems = this.computeItems(newId, stateCopy.nodes, stateCopy.links);\n    console.log(newNode);\n    this.setState(state => ({\n      selectedNode: newNode.props.node,\n      id: newNode.props.node.id,\n      title: newNode.props.node.label,\n      note: newNode.props.node.content,\n      nodes: stateCopy.nodes,\n      links: stateCopy.links,\n      items: computedItems\n    }));\n  }\n\n  computeItems(id, nodes, links) {\n    /**\n     * Computes the new graph to be \n     */\n    console.log(nodes);\n    console.log(links);\n    let items = {\n      nodes: [],\n      links: []\n    };\n    items.nodes.push(nodes.find(x => x.props.node.id === id));\n\n    for (let i = 0; i < links.length; i++) {\n      if (links[i].props.link.source === id) {\n        items.links.push(links[i]);\n        items.nodes.push(nodes.find(x => x.props.node.id === links[i].props.link.target));\n      } else if (links[i].props.link.target === id) {\n        items.links.push(links[i]);\n        items.nodes.push(nodes.find(x => x.props.node.id === links[i].props.link.source));\n      }\n    }\n\n    return items;\n  }\n\n  addNote(node) {\n    /**\n     * Adds a new node to the network \n     */\n    console.log(\"add\"); // let stateCopy = JSON.parse(JSON.stringify(this.state));\n  }\n\n  setNote(newNote) {\n    /**\n     * Changes content of a node in the network \n     */\n    console.log(\"set\");\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.nodes.find(x => x.props.node.id === stateCopy.id).props.node.content = newNote;\n    this.setState(state => ({\n      selectedNode: stateCopy.selectedNode,\n      id: stateCopy.id,\n      title: stateCopy.title,\n      note: newNote,\n      nodes: stateCopy.nodes,\n      links: stateCopy.links,\n      items: stateCopy.items\n    }));\n  }\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"note-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      key: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(LeftBar, {\n      key: \"left\",\n      getNote: this.getNote,\n      addNote: this.addNote,\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(DataScreen, {\n      key: \"data\",\n      state: this.state,\n      addNote: this.addNote,\n      getNote: this.getNote,\n      selectedNode: this.selectedNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(NoteScreen, {\n      key: \"note\",\n      state: this.state,\n      setNote: this.setNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/NoteWeb.js"],"names":["React","Component","ForceGraphNode","ForceGraphLink","NoteScreen","DataScreen","TopBar","LeftBar","NoteWeb","constructor","props","state","id","title","note","nodes","key","label","content","links","source","target","setNote","bind","getNote","addNote","computeItems","items","thisItem","node","console","log","selectedNode","newId","stateCopy","JSON","parse","stringify","newNode","find","x","computedItems","setState","push","i","length","link","newNote","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { ForceGraphNode, ForceGraphLink } from 'react-vis-force';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NoteScreen from './NoteScreen.js'\nimport DataScreen from './DataScreen.js'\nimport TopBar from './TopBar.js'\nimport LeftBar from './LeftBar.js'\n\nexport default class NoteWeb extends Component {\n  /**\n   * This is the main application. Creates a network of nodes for note taking, rather than a linear set of notes. \n   * Will use machine learning on back end to automatically link notes to each other\n   */\n  constructor(props) {\n  /**\n   * Constructor for Noteweb application. Initializes nodes and edges for graph. initializes the state. binds functions. \n   */\n    super(props);\n    this.state = {id: \"None\",  title: \"Title\", note: \"This is where your note is displayed\"};\n    // let nodes = [\n    //   <Node key=\"vader\" id= \"vader\" label=\"Darth Vader\" content=\"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\"/>,\n    //   <Node key=\"luke\" id= \"luke\" label=\"Luke Skywalker\" content=\"This is the Galaxy's only hope\"/>,\n    //   <Node key=\"leia\" id= \"leia\" label=\"Leia Organa\" content=\"This is the girl who is always counted out but comes up big\"/>,\n    //   <Node key=\"han\" id= \"han\" label=\"Han Solo\" content=\"What is this amateur hour\"/>,\n    //   <Node key=\"chewy\" id= \"chewy\" label=\"Chewbacca\" content=\"Ahhhhhhhhhhhhh\"/>,\n    //   <Node key=\"obi\" id= \"obi\" label=\"Obi-Wan Kenobi\" content=\"Why did you try it Anakin? I had the high ground. And I've used that exact trick on Darth Maul which I must have told you about. Did you think I wouldn't see that shit coming? Come on young padawan.\"/>,\n    //   <Node key=\"greedo\" id= \"greedo\" label=\"Greedo\" content=\"The green guy who was just too slow for Han Solo. Or was I innacurate? Did I shoot or not? Idk George Lucas keeps editing my only scene\"/>,\n    //   <Node key=\"yoda\" id= \"yoda\" label=\"Yoda\" content=\"That baby me am not. Look nothing like him, I did. More handsome I am.\"/>,\n    //   <Node key=\"boba\" id= \"boba\" label=\"Boba Fett\" content=\"Still being digested to this day in The Great Pit of Carkoon\"/>,\n    //   <Node key=\"jabba\" id= \"jabba\" label=\"Jabba The Hutt\" content=\"Me want solo on my wall\"/>,\n    //   <Node key=\"lando\" id= \"lando\" label=\"Lando Calrissian\" content=\"I'm in it for the money, and the women, and the greater good, but definitely the money\"/>,\n    //   <Node key=\"emporer\" id= \"emporer\" label=\"Emporer Palpatine\" content=\"This is the Dark Lord of the Sith\"/>\n    // ];\n    // let edges = [\n    //   <Edge key=\"0\" id= \"0\" source=\"yoda\" to=\"chewy\" />,\n    //   <Edge key=\"1\" id= \"1\" source=\"vader\" to=\"luke\" />,\n    //   <Edge key=\"2\" id= \"2\" source=\"vader\" to=\"leia\" />,\n    //   <Edge key=\"3\" id= \"3\" source=\"han\" to=\"leia\" />,\n    //   <Edge key=\"4\" id= \"4\" source=\"han\" to=\"chewy\" />,\n    //   <Edge key=\"5\" id= \"5\" source=\"obi\" to=\"luke\" />,\n    //   <Edge key=\"6\" id= \"6\" source=\"leia\" to=\"luke\" />,\n    //   <Edge key=\"7\" id= \"7\" source=\"vader\" to=\"obi\" />,\n    //   <Edge key=\"8\" id= \"8\" source=\"obi\" to=\"yoda\" />,\n    //   <Edge key=\"9\" id= \"9\" source=\"vader\" to=\"yoda\" />,\n    //   <Edge key=\"10\" id= \"10\" source=\"jabba\" to=\"han\" />,\n    //   <Edge key=\"11\" id= \"11\" source=\"jabba\" to=\"boba\" />,\n    //   <Edge key=\"12\" id= \"12\" source=\"boba\" to=\"han\" />,\n    //   <Edge key=\"13\" id= \"13\" source=\"han\" to=\"greedo\" />,\n    //   <Edge key=\"14\" id= \"14\" source=\"jabba\" to=\"greedo\" />,\n    //   <Edge key=\"15\" id= \"15\" source=\"yoda\" to=\"luke\" />,\n    //   <Edge key=\"16\" id= \"16\" source=\"emporer\" to=\"vader\" />,\n    //   <Edge key=\"17\" id= \"17\" source=\"emporer\" to=\"luke\" />,\n    //   <Edge key=\"18\" id= \"18\" source=\"lando\" to=\"han\" />\n    // ];\n    let nodes = [\n      <ForceGraphNode node={{ key: \"vader\", id: \"vader\", label: \"Darth Vader\", content: \"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\"}} fill=\"red\" zoomable/>,\n      <ForceGraphNode node={{ key: \"luke\", id: \"luke\", label: \"Luke Skywalker\" , content: \"This is the Galaxy's only hope.\" }} fill=\"blue\" zoomable/>,\n      <ForceGraphNode node={{ key: \"leia\", id: \"leia\", label: \"Leia Organa\", content: \"This is the girl who is always counted out but comes up big.\"}} fill=\"red\" zoomable/>,\n      <ForceGraphNode node={{ key: \"han\", id: \"han\", label: \"Han Solo\" , content: \"What is this amateur hour?\" }} fill=\"blue\" zoomable/>,\n      <ForceGraphNode node={{ key: \"chewy\", id: \"chewy\", label: \"Chewbacca\", content: \"Ahhhhhhhhhhhhh!\"}} fill=\"red\" zoomable/>,\n      <ForceGraphNode node={{ key: \"obi\", id: \"obi\", label: \"Obi-Wan Kenobi\" , content: \"Why did you try it Anakin? I had the high ground. And I've used that exact trick on Darth Maul which I must have told you about. Did you think I wouldn't see that shit coming? Come on young padawan.\"}} fill=\"blue\" zoomable/>,\n      <ForceGraphNode node={{ key: \"greedo\", id: \"greedo\", label: \"Greedo\", content: \"The green guy who was just too slow for Han Solo. Or was I innacurate? Did I shoot or not? Idk George Lucas keeps editing my only scene\"}} fill=\"red\" zoomable/>,\n      <ForceGraphNode node={{ key: \"yoda\", id: \"yoda\", label: \"Yoda\" , content: \"That baby me am not. Look nothing like him, I did. More handsome I am.\" }} fill=\"blue\" zoomable/>,\n      <ForceGraphNode node={{ key: \"boba\", id: \"boba\", label: \"Boba Fett\", content: \"Still being digested to this day in The Great Pit of Carkoon\"}} fill=\"red\" zoomable/>,\n      <ForceGraphNode node={{ key: \"jabba\", id: \"jabba\", label: \"Jabba The Hutt\" , content: \"Me want solo on my wall.\" }} fill=\"blue\" zoomable/>,\n      <ForceGraphNode node={{ key: \"lando\", id: \"lando\", label: \"Lando Calrissian\", content: \"I'm in it for the money, and the women, and the greater good, but definitely the money.\"}} fill=\"red\" zoomable/>,\n      <ForceGraphNode node={{ key: \"emporer\", id: \"emporer\", label: \"Emporer Palpatine\" , content: \"This is the Dark Lord of the Sith\" }} fill=\"blue\" zoomable/>,\n    ]\n    \n    let links = [\n      <ForceGraphLink link={{ key: \"0\", id: \"0\", source:\"yoda\", target:\"chewy\" }} />,\n      <ForceGraphLink link={{ key: \"1\", id: \"1\", source:\"vader\", target:\"luke\" }} />,\n      <ForceGraphLink link={{ key: \"2\", id: \"2\", source:\"vader\", target:\"leia\" }} />,\n      <ForceGraphLink link={{ key: \"3\", id: \"3\", source:\"han\", target:\"leia\" }} />,\n      <ForceGraphLink link={{ key: \"4\", id: \"4\", source:\"han\", target:\"chewy\" }} />,\n      <ForceGraphLink link={{ key: \"5\", id: \"5\", source:\"obi\", target:\"luke\" }} />,\n      <ForceGraphLink link={{ key: \"6\", id: \"6\", source:\"leia\", target:\"luke\" }} />,\n      <ForceGraphLink link={{ key: \"7\", id: \"7\", source:\"vader\", target:\"obi\" }} />,\n      <ForceGraphLink link={{ key: \"8\", id: \"8\", source:\"obi\", target:\"yoda\" }} />,\n      <ForceGraphLink link={{ key: \"9\", id: \"9\", source:\"vader\", target:\"yoda\" }} />,\n      <ForceGraphLink link={{ key: \"10\", id: \"10\", source:\"jabba\", target:\"han\" }} />,\n      <ForceGraphLink link={{ key: \"11\", id: \"11\", source:\"jabba\", target:\"boba\" }} />,\n      <ForceGraphLink link={{ key: \"12\", id: \"12\", source:\"boba\", target:\"han\" }} />,\n      <ForceGraphLink link={{ key: \"13\", id: \"13\", source:\"han\", target:\"greedo\" }} />,\n      <ForceGraphLink link={{ key: \"14\", id: \"14\", source:\"jabba\", target:\"greedo\" }} />,\n      <ForceGraphLink link={{ key: \"15\", id: \"15\", source:\"yoda\", target:\"luke\" }} />,\n      <ForceGraphLink link={{ key: \"16\", id: \"16\", source:\"emporer\", target:\"vader\" }} />,\n      <ForceGraphLink link={{ key: \"17\", id: \"17\", source:\"emporer\", target:\"luke\" }} />,\n      <ForceGraphLink link={{ key: \"18\", id: \"18\", source:\"lando\", target:\"han\" }} />\n    ]\n    this.setNote = this.setNote.bind(this);\n    this.getNote = this.getNote.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.computeItems = this.computeItems.bind(this);\n    // let graph = {nodes:[],edges:[]};\n    // graph.nodes.push(nodes.find(x => x.id === \"vader\"));\n    // for (let i = 0; i < edges.length; i++) {\n    //   if(edges[i].source === \"vader\"){\n    //     graph.edges.push(edges[i]);\n    //     graph.nodes.push(nodes.find(x => x.id === edges[i].target));\n    //   }else if(edges[i].target === \"vader\"){\n    //     graph.edges.push(edges[i]);\n    //     graph.nodes.push(nodes.find(x => x.id === edges[i].source));\n    //   }\n    // }\n    let items = this.computeItems(\"vader\",nodes,links);\n    let thisItem = items.nodes[0].props.node;\n    console.log(\"thisItem\");\n    console.log(thisItem);\n    this.state = {selectedNode: thisItem, id: thisItem.id,  title: thisItem.label, note: thisItem.content, nodes: nodes, links: links, items: items}//, graph:graph};\n    // this.state = {id: thisItem.props.id,  title: thisItem.props.label, note: thisItem.props.content, nodes: nodes, edges: edges, items:items, graph:{nodes:nodes, edges:edges}};\n  }\n  \n  getNote(newId){\n    /**\n     * Retreives the contents of a note and displays the contents in the NoteScreen \n     */\n    console.log(\"get\")\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    let newNode = stateCopy.nodes.find(x => x.props.node.id === newId);\n    let computedItems = this.computeItems(newId,stateCopy.nodes,stateCopy.links)\n    console.log(newNode);\n    this.setState(state => ({\n        selectedNode: newNode.props.node,\n        id: newNode.props.node.id,\n        title: newNode.props.node.label,\n        note: newNode.props.node.content,\n        nodes: stateCopy.nodes,\n        links: stateCopy.links,\n        items: computedItems\n      }));\n  }\n  \n  computeItems(id, nodes, links){\n    /**\n     * Computes the new graph to be \n     */\n    console.log(nodes);\n    console.log(links);\n    let items = {nodes:[],links:[]};\n    items.nodes.push(nodes.find(x => x.props.node.id === id));\n    for (let i = 0; i < links.length; i++) {\n      if(links[i].props.link.source === id){\n        items.links.push(links[i]);\n        items.nodes.push(nodes.find(x => x.props.node.id === links[i].props.link.target));\n      }else if(links[i].props.link.target === id){\n        items.links.push(links[i]);\n        items.nodes.push(nodes.find(x => x.props.node.id === links[i].props.link.source));\n      }\n    }\n    return items;\n  }\n  \n  addNote(node){\n    /**\n     * Adds a new node to the network \n     */\n    console.log(\"add\");\n    // let stateCopy = JSON.parse(JSON.stringify(this.state));\n  }\n  \n  setNote(newNote){\n    /**\n     * Changes content of a node in the network \n     */\n    console.log(\"set\");\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.nodes.find(x => x.props.node.id === stateCopy.id).props.node.content = newNote;\n    this.setState(state => ({\n        selectedNode: stateCopy.selectedNode,\n        id: stateCopy.id,\n        title: stateCopy.title,\n        note: newNote,\n        nodes: stateCopy.nodes,\n        links: stateCopy.links,\n        items: stateCopy.items\n      }));\n  }\n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"note-web\">\n        <TopBar key=\"top\"/>\n        <div className=\"main-content\">\n          <LeftBar key=\"left\" getNote={this.getNote} addNote={this.addNote} state={this.state}/>\n          <DataScreen key=\"data\" state={this.state} addNote={this.addNote} getNote={this.getNote} selectedNode={this.selectedNode}/>\n          <NoteScreen key=\"note\" state={this.state} setNote={this.setNote}/>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}