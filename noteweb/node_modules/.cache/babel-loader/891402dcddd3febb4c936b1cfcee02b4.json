{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/DataScreen.js\";\nimport React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport Graph from 'react-graph-vis';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class DataScreen extends Component {\n  /**\n   * This screen displays the network of notes and allows selection of a note to be displayed in the NoteScreen\n   */\n  constructor(props) {\n    super(props);\n\n    this.setNetworkInstance = nw => {\n      this.network = nw;\n    };\n\n    console.log(props);\n    this.state = {\n      options: {\n        layout: {\n          hierarchical: false\n        },\n        edges: {\n          color: \"#FFFFFF\"\n        },\n        height: \"500px\"\n      },\n      events: {\n        select: event => {\n          var nodes = event.nodes,\n              edges = event.edges;\n          this.props.getNote(event.nodes[0]);\n        }\n      },\n      getnote: this.props.getNote\n    }; // Don't call this.setState() here!\n\n    this.network = React.createElement(Graph, {\n      getNetwork: this.setNetworkInstance,\n      graph: this.props.state.graph,\n      options: this.state.options,\n      events: this.state.events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n    console.log(this.network);\n  } // componentWillReceiveProps(nextProps) {\n  //   /*\n  //   * Might help propogate state change down to child from parent\n  //   */\n  //   console.log(\"1\")\n  //   console.log(nextProps);\n  //   console.log(\"2\")\n  //   console.log(nextProps.state.items);\n  //   this.setState({ items: nextProps.state.items});\n  //   console.log(\"3\")\n  //   console.log(this.state);\n  //   console.log(this.network);\n  // }\n\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"datascreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"HELLO\")), this.network);\n  }\n\n}","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/DataScreen.js"],"names":["React","Component","Network","Node","Edge","Graph","DataScreen","constructor","props","setNetworkInstance","nw","network","console","log","state","options","layout","hierarchical","edges","color","height","events","select","event","nodes","getNote","getnote","graph","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0CAAP;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AAEA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAChD;;;AAGAM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgDnBC,kBAhDmB,GAgDEC,EAAE,IAAI;AACzB,WAAKC,OAAL,GAAeD,EAAf;AACD,KAlDkB;;AAEjBE,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SAAKM,KAAL,GAAa;AAEXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,YAAY,EAAE;AADR,SADD;AAIPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AADF,SAJA;AAOPC,QAAAA,MAAM,EAAE;AAPD,OAFE;AAWXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAGC,KAAD,IAAW;AAAA,cACXC,KADW,GACMD,KADN,CACXC,KADW;AAAA,cACJN,KADI,GACMK,KADN,CACJL,KADI;AAEjB,eAAKV,KAAL,CAAWiB,OAAX,CAAmBF,KAAK,CAACC,KAAN,CAAY,CAAZ,CAAnB;AACD;AAJK,OAXG;AAiBXE,MAAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWiB;AAjBT,KAAb,CAHiB,CAwBjB;;AACA,SAAKd,OAAL,GAAc,oBAAC,KAAD;AACZ,MAAA,UAAU,EAAE,KAAKF,kBADL;AAEZ,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWM,KAAX,CAAiBa,KAFZ;AAGZ,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWC,OAHR;AAIZ,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWO,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAMAT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,OAAjB;AACD,GApC+C,CAsChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMAiB,EAAAA,MAAM,GAAG;AACP;;;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIG,KAAKjB,OAJR,CADF;AAQD;;AApE+C","sourcesContent":["import React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport Graph from 'react-graph-vis'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class DataScreen extends Component {\n  /**\n   * This screen displays the network of notes and allows selection of a note to be displayed in the NoteScreen\n   */\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = { \n    \n      options: {\n        layout: {\n          hierarchical: false\n        },\n        edges: {\n          color: \"#FFFFFF\"\n        },\n        height: \"500px\"\n      },\n      events: {\n        select: (event) => {\n          var { nodes, edges } = event;\n          this.props.getNote(event.nodes[0]);\n        }\n      },\n      getnote: this.props.getNote\n    };\n    \n    \n    // Don't call this.setState() here!\n    this.network= <Graph\n      getNetwork={this.setNetworkInstance}\n      graph={this.props.state.graph}\n      options={this.state.options}\n      events={this.state.events}\n    />;\n    console.log(this.network)\n  } \n  \n  // componentWillReceiveProps(nextProps) {\n  //   /*\n  //   * Might help propogate state change down to child from parent\n  //   */\n  //   console.log(\"1\")\n  //   console.log(nextProps);\n  //   console.log(\"2\")\n  //   console.log(nextProps.state.items);\n  //   this.setState({ items: nextProps.state.items});\n  //   console.log(\"3\")\n  //   console.log(this.state);\n  //   console.log(this.network);\n  // }\n  \n  setNetworkInstance = nw => {\n    this.network = nw;\n  }\n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"datascreen\">\n        <div>\n          <p>HELLO</p>\n        </div>\n        {this.network}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}