{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/DataScreen.js\";\nimport React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { InteractiveForceGraph } from 'react-vis-force';\nimport Graph from 'react-graph-vis';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class DataScreen extends Component {\n  /**\n   * This screen displays the network of notes and allows selection of a note to be displayed in the NoteScreen\n   */\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = this.props.state; // this.network= <Graph\n    //   graph={this.state.graph}\n    //   options={this.options}\n    //   events={this.events}\n    // />;\n\n    this.network = React.createElement(InteractiveForceGraph, {\n      simulationOptions: {\n        height: 800,\n        width: 800\n      },\n      zoomOptions: {\n        minScale: 200\n      },\n      labelAttr: \"label\",\n      onSelectNode: (event, node) => {\n        this.props.getNote(node.id);\n      },\n      highlightDependencies: true,\n      showLabels: true,\n      zoom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.state.nodes.concat(this.props.state.links)); // console.log(this.network.props.graph.nodes);\n  } // componentWillReceiveProps(nextProps) {\n  //   /*\n  //   * Might help propogate state change down to child from parent\n  //   */\n  //   console.log(\"1\")\n  //   console.log(nextProps);\n  //   console.log(\"2\")\n  //   console.log(nextProps.state.items);\n  //   this.setState({ items: nextProps.state.items});\n  //   console.log(\"3\")\n  //   console.log(this.state);\n  //   console.log(this.network);\n  // }\n\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"datascreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"datascreen-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.network));\n  }\n\n}","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/DataScreen.js"],"names":["React","Component","InteractiveForceGraph","Graph","DataScreen","constructor","props","console","log","state","network","height","width","minScale","event","node","getNote","id","nodes","concat","links","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0CAAP;AACA,SAASC,qBAAT,QAAqC,iBAArC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AAEA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAChD;;;AAGAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKG,KAAL,GAAa,KAAKH,KAAL,CAAWG,KAAxB,CAHiB,CAIjB;AACA;AACA;AACA;AACA;;AACA,SAAKC,OAAL,GAAe,oBAAC,qBAAD;AACb,MAAA,iBAAiB,EAAE;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OADN;AAEb,MAAA,WAAW,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAFA;AAGb,MAAA,SAAS,EAAC,OAHG;AAIb,MAAA,YAAY,EAAE,CAACC,KAAD,EAAOC,IAAP,KAAgB;AACd,aAAKT,KAAL,CAAWU,OAAX,CAAmBD,IAAI,CAACE,EAAxB;AAA4B,OAL/B;AAMb,MAAA,qBAAqB,MANR;AAOb,MAAA,UAAU,MAPG;AAQb,MAAA,IAAI,MARS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUZ,KAAKX,KAAL,CAAWG,KAAX,CAAiBS,KAAjB,CAAuBC,MAAvB,CAA8B,KAAKb,KAAL,CAAWG,KAAX,CAAiBW,KAA/C,CAVY,CAAf,CATiB,CAqBjB;AACD,GA1B+C,CA4BhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIAC,EAAAA,MAAM,GAAG;AACP;;;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,OADR,CADF,CADF;AAOD;;AAvD+C","sourcesContent":["import React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { InteractiveForceGraph} from 'react-vis-force';\nimport Graph from 'react-graph-vis'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class DataScreen extends Component {\n  /**\n   * This screen displays the network of notes and allows selection of a note to be displayed in the NoteScreen\n   */\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = this.props.state;\n    // this.network= <Graph\n    //   graph={this.state.graph}\n    //   options={this.options}\n    //   events={this.events}\n    // />;\n    this.network = <InteractiveForceGraph\n      simulationOptions={{ height: 800, width: 800}}\n      zoomOptions={{ minScale: 200}}\n      labelAttr=\"label\"\n      onSelectNode={(event,node) => {\n                      this.props.getNote(node.id)}}\n      highlightDependencies\n      showLabels\n      zoom\n    >\n      {this.props.state.nodes.concat(this.props.state.links)}\n    </InteractiveForceGraph>\n    // console.log(this.network.props.graph.nodes);\n  } \n  \n  // componentWillReceiveProps(nextProps) {\n  //   /*\n  //   * Might help propogate state change down to child from parent\n  //   */\n  //   console.log(\"1\")\n  //   console.log(nextProps);\n  //   console.log(\"2\")\n  //   console.log(nextProps.state.items);\n  //   this.setState({ items: nextProps.state.items});\n  //   console.log(\"3\")\n  //   console.log(this.state);\n  //   console.log(this.network);\n  // }\n  \n  \n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"datascreen\">\n        <div className=\"datascreen-content\">\n          {this.network}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}