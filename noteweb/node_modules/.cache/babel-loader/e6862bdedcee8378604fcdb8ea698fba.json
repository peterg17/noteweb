{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Graph } from 'vis-react';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nvar options = {\n  layout: {\n    hierarchical: true\n  },\n  edges: {\n    color: '#000000'\n  }\n};\nvar events = {\n  select: function (event) {\n    var nodes = event.nodes,\n        edges = event.edges;\n  }\n};\nvar graph = {\n  nodes: [{\n    id: 1,\n    label: 'Node 1'\n  }, {\n    id: 2,\n    label: 'Node 2'\n  }, {\n    id: 3,\n    label: 'Node 3'\n  }, {\n    id: 4,\n    label: 'Node 4'\n  }, {\n    id: 5,\n    label: 'Node 5'\n  }],\n  edges: [{\n    from: 1,\n    to: 2\n  }, {\n    from: 1,\n    to: 3\n  }, {\n    from: 2,\n    to: 4\n  }, {\n    from: 2,\n    to: 5\n  }]\n};\n\nclass NoteWeb extends React.Component {\n  // This is the main container for all content\n  render() {\n    return React.createElement(\"div\", {\n      className: \"noteweb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass TopBar extends React.Component {\n  // This is the header of the application\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Noteweb v0.0\")), React.createElement(\"div\", {\n      className: \"account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Main extends React.Component {\n  // This is the main content of the application, and holds the left side bar and the notes display\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(LeftBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(DataScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(NoteScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass LeftBar extends React.Component {\n  // Content on left side of screen\n  render() {\n    return React.createElement(\"div\", {\n      className: \"leftbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Some leftbar stuff\"));\n  }\n\n}\n\nclass DataScreen extends React.Component {\n  //The notes graph display\n  attachZoom() {\n    console.log(\"hi\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"datascreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"// \", React.createElement(\"rect\", {\n      width: 500,\n      height: 500,\n      rx: 14,\n      fill: \"#272b4d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Graph, {\n      graph: graph,\n      options: options,\n      events: events // style={style}\n      ,\n      getNetwork: this.getNetwork,\n      getEdges: this.getEdges,\n      getNodes: this.getNodes,\n      vis: vis => this.vis = vis,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass NoteScreen extends React.Component {\n  // the note content display\n  render() {\n    return React.createElement(\"div\", {\n      className: \"notescreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"container\", {\n      width: \"100%\",\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Note Title \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" note content \")));\n  }\n\n} // ========================================\n// ReactDOM.render(\n//   <NoteWeb />,\n//   document.getElementById('root')\n// );\n\n\nReact.render(React.createElement(Graph, {\n  graph: graph,\n  options: options,\n  events: events // style={style}\n  ,\n  getNetwork: this.getNetwork,\n  getEdges: this.getEdges,\n  getNodes: this.getNodes,\n  vis: vis => this.vis = vis,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}), document.body);","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/index.js"],"names":["React","ReactDOM","Graph","options","layout","hierarchical","edges","color","events","select","event","nodes","graph","id","label","from","to","NoteWeb","Component","render","TopBar","Main","LeftBar","DataScreen","attachZoom","console","log","getNetwork","getEdges","getNodes","vis","NoteScreen","document","body"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Graph } from 'vis-react';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nvar options = {\n    layout: {\n        hierarchical: true\n    },\n    edges: {\n        color: '#000000'\n    }\n};\n \nvar events = {\n    select: function(event) {\n        var { nodes, edges } = event;\n    }\n};\n\nvar graph = {\n    nodes: [\n        { id: 1, label: 'Node 1' },\n        { id: 2, label: 'Node 2' },\n        { id: 3, label: 'Node 3' },\n        { id: 4, label: 'Node 4' },\n        { id: 5, label: 'Node 5' }\n    ],\n    edges: [{ from: 1, to: 2 }, { from: 1, to: 3 }, { from: 2, to: 4 }, { from: 2, to: 5 }]\n};\n\nclass NoteWeb extends React.Component {\n  // This is the main container for all content\n  render() {\n    return (\n      <div className=\"noteweb\">\n        <TopBar />\n        <Main />\n      </div>\n    );\n  }\n}\n\nclass TopBar extends React.Component {\n  // This is the header of the application\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"topbar\">\n            <h1>Noteweb v0.0</h1>\n          </div>\n          <div className=\"account\">\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Main extends React.Component {\n  // This is the main content of the application, and holds the left side bar and the notes display\n  render() {\n    return (\n      <div className=\"container\">\n        <LeftBar />\n        <div className=\"main-content\">\n          <DataScreen />\n          <NoteScreen />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass LeftBar extends React.Component {\n  // Content on left side of screen\n  render() {\n    return (\n      <div className=\"leftbar\">\n        <p>Some leftbar stuff</p>\n      </div>\n    );\n  }\n}\n\nclass DataScreen extends React.Component {\n  //The notes graph display\n  attachZoom() {\n    console.log(\"hi\");\n  }\n  \n  render() {\n    return (\n      <div className=\"datascreen\">\n        {/* <p>Some main datascreen stuff</p> */}\n          // <rect width={500} height={500} rx={14} fill=\"#272b4d\" />\n        <Graph graph={graph}\n          options={options}\n          events={events}\n          // style={style}\n          getNetwork={this.getNetwork}\n          getEdges={this.getEdges}\n          getNodes={this.getNodes}\n          vis={vis => (this.vis = vis)} />\n      </div>\n    );\n  }\n}\n\nclass NoteScreen extends React.Component {\n  // the note content display\n  render() {\n    return(\n      <div className=\"notescreen\">\n        {/* <p>Some main datascreen stuff</p> */}\n        <container width=\"100%\" height=\"100%\">\n          <h3> Note Title </h3>\n          <p> note content </p>\n        </container>\n      </div>\n    );\n  }\n  \n}\n\n// ========================================\n\n// ReactDOM.render(\n//   <NoteWeb />,\n//   document.getElementById('root')\n// );\nReact.render(\n    <Graph\n        graph={graph}\n        options={options}\n        events={events}\n        // style={style}\n        getNetwork={this.getNetwork}\n        getEdges={this.getEdges}\n        getNodes={this.getNodes}\n        vis={vis => (this.vis = vis)}\n    />,\n    document.body\n);\n"]},"metadata":{},"sourceType":"module"}