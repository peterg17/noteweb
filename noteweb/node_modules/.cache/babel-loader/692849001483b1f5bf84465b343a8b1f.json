{"ast":null,"code":"var _jsxFileName = \"/Users/victorfink/Documents/Projects/noteweb/src/NoteWeb.js\";\nimport React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport { Graph } from 'react-graph-vis';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NoteScreen from './NoteScreen.js';\nimport DataScreen from './DataScreen.js';\nimport TopBar from './TopBar.js';\nimport LeftBar from './LeftBar.js';\nexport default class NoteWeb extends Component {\n  /**\n   * This is the main application. Creates a network of nodes for note taking, rather than a linear set of notes. \n   * Will use machine learning on back end to automatically link notes to each other\n   */\n  constructor(props) {\n    /**\n     * Constructor for Noteweb application. Initializes nodes and edges for graph. initializes the state. binds functions. \n     */\n    super(props);\n    this.state = {\n      id: \"None\",\n      title: \"Title\",\n      note: \"This is where your note is displayed\"\n    };\n    console.log(this.note);\n\n    const Decorator = props => {\n      return React.createElement(\"button\", {\n        onClick: () => this.getNote(props.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Click Me\");\n    };\n\n    let nodes = [React.createElement(Node, {\n      key: \"vader\",\n      id: \"vader\",\n      label: \"Darth Vader\",\n      decorator: Decorator,\n      content: \"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"luke\",\n      id: \"luke\",\n      label: \"Luke Skywalker\",\n      decorator: Decorator,\n      content: \"This is the Galaxy's only hope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"leia\",\n      id: \"leia\",\n      label: \"Leia Organa\",\n      decorator: Decorator,\n      content: \"This is the girl who is always counted out but comes up big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"han\",\n      id: \"han\",\n      label: \"Han Solo\",\n      decorator: Decorator,\n      content: \"What is this amateur hour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"chewy\",\n      id: \"chewy\",\n      label: \"Chewbacca\",\n      decorator: Decorator,\n      content: \"Ahhhhhhhhhhhhh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"obi\",\n      id: \"obi\",\n      label: \"Obi-Wan Kenobi\",\n      decorator: Decorator,\n      content: \"Why did you try it Anakin? I had the high ground. And I've used that exact trick on Darth Maul which I must have told you about. Did you think I wouldn't see that shit coming? Come on young padawan.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"greedo\",\n      id: \"greedo\",\n      label: \"Greedo\",\n      decorator: Decorator,\n      content: \"The green guy who was just too slow for Han Solo. Or was I innacurate? Did I shoot or not? Idk George Lucas keeps editing my only scene\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"yoda\",\n      id: \"yoda\",\n      label: \"Yoda\",\n      decorator: Decorator,\n      content: \"That baby me am not. Look nothing like him, I did. More handsome I am.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"boba\",\n      id: \"boba\",\n      label: \"Boba Fett\",\n      decorator: Decorator,\n      content: \"Still being digested to this day in The Great Pit of Carkoon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"jabba\",\n      id: \"jabba\",\n      label: \"Jabba The Hutt\",\n      decorator: Decorator,\n      content: \"Me want solo on my wall\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"lando\",\n      id: \"lando\",\n      label: \"Lando Calrissian\",\n      decorator: Decorator,\n      content: \"I'm in it for the money, and the women, and the greater good, but definitely the money\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Node, {\n      key: \"emporer\",\n      id: \"emporer\",\n      label: \"Emporer Palpatine\",\n      decorator: Decorator,\n      content: \"This is the Dark Lord of the Sith\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })];\n    let edges = [React.createElement(Edge, {\n      key: \"0\",\n      id: \"0\",\n      from: \"yoda\",\n      to: \"chewy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"1\",\n      id: \"1\",\n      from: \"vader\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"2\",\n      id: \"2\",\n      from: \"vader\",\n      to: \"leia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"3\",\n      id: \"3\",\n      from: \"han\",\n      to: \"leia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"4\",\n      id: \"4\",\n      from: \"han\",\n      to: \"chewy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"5\",\n      id: \"5\",\n      from: \"obi\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"6\",\n      id: \"6\",\n      from: \"leia\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"7\",\n      id: \"7\",\n      from: \"vader\",\n      to: \"obi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"8\",\n      id: \"8\",\n      from: \"obi\",\n      to: \"yoda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"9\",\n      id: \"9\",\n      from: \"vader\",\n      to: \"yoda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"10\",\n      id: \"10\",\n      from: \"jabba\",\n      to: \"han\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"11\",\n      id: \"11\",\n      from: \"jabba\",\n      to: \"boba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"12\",\n      id: \"12\",\n      from: \"boba\",\n      to: \"han\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"13\",\n      id: \"13\",\n      from: \"han\",\n      to: \"greedo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"14\",\n      id: \"14\",\n      from: \"jabba\",\n      to: \"greedo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"15\",\n      id: \"15\",\n      from: \"yoda\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"16\",\n      id: \"16\",\n      from: \"emporer\",\n      to: \"vader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"17\",\n      id: \"17\",\n      from: \"emporer\",\n      to: \"luke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Edge, {\n      key: \"18\",\n      id: \"18\",\n      from: \"lando\",\n      to: \"han\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })];\n    let items = [];\n    items.push(nodes.find(x => x.props.id === \"vader\"));\n\n    for (let i = 0; i < edges.length; i++) {\n      console.log(edges[i]);\n\n      if (edges[i].props.from === \"vader\") {\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.to));\n      } else if (edges[i].props.to === \"vader\") {\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.from));\n      }\n    }\n\n    this.state = {\n      id: \"vader\",\n      title: \"Darth Vader\",\n      note: \"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\",\n      nodes: nodes,\n      edges: edges,\n      items: items\n    };\n    this.setNote = this.setNote.bind(this);\n    this.getNote = this.getNote.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.computeItems = this.computeItems.bind(this);\n    console.log(this.state);\n  }\n\n  getNote(newId) {\n    /**\n     * Retreives the contents of a note and displays the contents in the NoteScreen \n     */\n    console.log(\"get\");\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    console.log(stateCopy);\n    let newNode = stateCopy.nodes.find(x => x.props.id === newId);\n    let items = this.computeItems(newId, stateCopy.nodes, stateCopy.edges);\n    console.log(items);\n    this.setState(state => ({\n      id: newNode.props.id,\n      title: newNode.props.label,\n      note: newNode.props.content,\n      nodes: stateCopy.nodes,\n      edges: stateCopy.edges,\n      items: items\n    }));\n  }\n\n  computeItems(id, nodes, edges) {\n    /**\n     * Computes the new items to be \n     */\n    let items = [];\n    items.push(nodes.find(x => x.props.id === id));\n\n    for (let i = 0; i < edges.length; i++) {\n      if (edges[i].props.from === id) {\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.to));\n      } else if (edges[i].props.to === id) {\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.from));\n      }\n    }\n\n    return items;\n  }\n\n  addNote(title) {\n    /**\n     * Adds a new node to the network \n     */\n    console.log(\"add\");\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    console.log(title);\n  }\n\n  setNote(newNote) {\n    /**\n     * Adds a new node to the network \n     */\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.nodes.find(x => x.props.id === stateCopy.id).props.content = newNote; // console.log(stateCopy);\n\n    this.setState(state => ({\n      id: stateCopy.id,\n      title: stateCopy.title,\n      note: newNote,\n      nodes: stateCopy.nodes,\n      edges: stateCopy.edges\n    }));\n  }\n\n  render() {\n    /**\n     * Renders the component\n     */\n    return React.createElement(\"div\", {\n      className: \"note-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      key: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(LeftBar, {\n      key: \"left\",\n      getNote: this.getNote,\n      addNote: this.addNote,\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(DataScreen, {\n      key: \"data\",\n      state: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(NoteScreen, {\n      key: \"note\",\n      state: this.state,\n      setNote: this.setNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/victorfink/Documents/Projects/noteweb/src/NoteWeb.js"],"names":["React","Component","Network","Node","Edge","Graph","NoteScreen","DataScreen","TopBar","LeftBar","NoteWeb","constructor","props","state","id","title","note","console","log","Decorator","getNote","nodes","edges","items","push","find","x","i","length","from","to","setNote","bind","addNote","computeItems","newId","stateCopy","JSON","parse","stringify","newNode","setState","label","content","newNote","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0CAAP;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,eAAe,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAC7C;;;;AAIAU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB;;;AAGE,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,EAAE,EAAE,MAAL;AAAcC,MAAAA,KAAK,EAAE,OAArB;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,IAAjB;;AACA,UAAMG,SAAS,GAAGP,KAAK,IAAI;AACzB,aACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKQ,OAAL,CAAaR,KAAK,CAACE,EAAnB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,KARD;;AASA,QAAIO,KAAK,GAAG,CACV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,OAAV;AAAkB,MAAA,EAAE,EAAE,OAAtB;AAA8B,MAAA,KAAK,EAAC,aAApC;AAAkD,MAAA,SAAS,EAAEF,SAA7D;AAAwE,MAAA,OAAO,EAAC,2JAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,EAEV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,EAAE,EAAE,MAArB;AAA4B,MAAA,KAAK,EAAC,gBAAlC;AAAmD,MAAA,SAAS,EAAEA,SAA9D;AAAyE,MAAA,OAAO,EAAC,gCAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFU,EAGV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,EAAE,EAAE,MAArB;AAA4B,MAAA,KAAK,EAAC,aAAlC;AAAgD,MAAA,SAAS,EAAEA,SAA3D;AAAsE,MAAA,OAAO,EAAC,6DAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHU,EAIV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,KAAV;AAAgB,MAAA,EAAE,EAAE,KAApB;AAA0B,MAAA,KAAK,EAAC,UAAhC;AAA2C,MAAA,SAAS,EAAEA,SAAtD;AAAiE,MAAA,OAAO,EAAC,2BAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJU,EAKV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,OAAV;AAAkB,MAAA,EAAE,EAAE,OAAtB;AAA8B,MAAA,KAAK,EAAC,WAApC;AAAgD,MAAA,SAAS,EAAEA,SAA3D;AAAsE,MAAA,OAAO,EAAC,gBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALU,EAMV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,KAAV;AAAgB,MAAA,EAAE,EAAE,KAApB;AAA0B,MAAA,KAAK,EAAC,gBAAhC;AAAiD,MAAA,SAAS,EAAEA,SAA5D;AAAuE,MAAA,OAAO,EAAC,wMAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANU,EAOV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,QAAV;AAAmB,MAAA,EAAE,EAAE,QAAvB;AAAgC,MAAA,KAAK,EAAC,QAAtC;AAA+C,MAAA,SAAS,EAAEA,SAA1D;AAAqE,MAAA,OAAO,EAAC,yIAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPU,EAQV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,EAAE,EAAE,MAArB;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAyC,MAAA,SAAS,EAAEA,SAApD;AAA+D,MAAA,OAAO,EAAC,wEAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARU,EASV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,EAAE,EAAE,MAArB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,SAAS,EAAEA,SAAzD;AAAoE,MAAA,OAAO,EAAC,8DAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATU,EAUV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,OAAV;AAAkB,MAAA,EAAE,EAAE,OAAtB;AAA8B,MAAA,KAAK,EAAC,gBAApC;AAAqD,MAAA,SAAS,EAAEA,SAAhE;AAA2E,MAAA,OAAO,EAAC,yBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVU,EAWV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,OAAV;AAAkB,MAAA,EAAE,EAAE,OAAtB;AAA8B,MAAA,KAAK,EAAC,kBAApC;AAAuD,MAAA,SAAS,EAAEA,SAAlE;AAA6E,MAAA,OAAO,EAAC,wFAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXU,EAYV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,SAAV;AAAoB,MAAA,EAAE,EAAE,SAAxB;AAAkC,MAAA,KAAK,EAAC,mBAAxC;AAA4D,MAAA,SAAS,EAAEA,SAAvE;AAAkF,MAAA,OAAO,EAAC,mCAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZU,CAAZ;AAcA,QAAIG,KAAK,GAAG,CACV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,EAEV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,EAAE,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFU,EAGV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,EAAE,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHU,EAIV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,KAA3B;AAAiC,MAAA,EAAE,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJU,EAKV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,KAA3B;AAAiC,MAAA,EAAE,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALU,EAMV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,KAA3B;AAAiC,MAAA,EAAE,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANU,EAOV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPU,EAQV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,EAAE,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARU,EASV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,KAA3B;AAAiC,MAAA,EAAE,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATU,EAUV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAc,MAAA,EAAE,EAAE,GAAlB;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,EAAE,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVU,EAWV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,OAA7B;AAAqC,MAAA,EAAE,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXU,EAYV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,OAA7B;AAAqC,MAAA,EAAE,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZU,EAaV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,EAAE,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbU,EAcV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,KAA7B;AAAmC,MAAA,EAAE,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdU,EAeV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,OAA7B;AAAqC,MAAA,EAAE,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfU,EAgBV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,EAAE,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBU,EAiBV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,SAA7B;AAAuC,MAAA,EAAE,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBU,EAkBV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,SAA7B;AAAuC,MAAA,EAAE,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBU,EAmBV,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,IAAV;AAAe,MAAA,EAAE,EAAE,IAAnB;AAAwB,MAAA,IAAI,EAAC,OAA7B;AAAqC,MAAA,EAAE,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBU,CAAZ;AAqBA,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACd,KAAF,CAAQE,EAAR,KAAe,OAA/B,CAAX;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCV,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACK,CAAD,CAAjB;;AACA,UAAGL,KAAK,CAACK,CAAD,CAAL,CAASf,KAAT,CAAeiB,IAAf,KAAwB,OAA3B,EAAmC;AACjCN,QAAAA,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACK,CAAD,CAAhB;AACAJ,QAAAA,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACd,KAAF,CAAQE,EAAR,KAAeQ,KAAK,CAACK,CAAD,CAAL,CAASf,KAAT,CAAekB,EAA9C,CAAX;AACD,OAHD,MAGM,IAAGR,KAAK,CAACK,CAAD,CAAL,CAASf,KAAT,CAAekB,EAAf,KAAsB,OAAzB,EAAiC;AACrCP,QAAAA,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACK,CAAD,CAAhB;AACAJ,QAAAA,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACd,KAAF,CAAQE,EAAR,KAAeQ,KAAK,CAACK,CAAD,CAAL,CAASf,KAAT,CAAeiB,IAA9C,CAAX;AACD;AACF;;AACD,SAAKhB,KAAL,GAAa;AAACC,MAAAA,EAAE,EAAE,OAAL;AAAeC,MAAAA,KAAK,EAAE,aAAtB;AAAqCC,MAAAA,IAAI,EAAE,2JAA3C;AAAwMK,MAAAA,KAAK,EAAEA,KAA/M;AAAsNC,MAAAA,KAAK,EAAEA,KAA7N;AAAoOC,MAAAA,KAAK,EAACA;AAA1O,KAAb;AACA,SAAKQ,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKZ,OAAL,GAAe,KAAKA,OAAL,CAAaY,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD;;AAEDO,EAAAA,OAAO,CAACe,KAAD,EAAO;AACZ;;;AAGAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAIkB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK1B,KAApB,CAAX,CAAhB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYkB,SAAZ;AACA,QAAII,OAAO,GAAGJ,SAAS,CAACf,KAAV,CAAgBI,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACd,KAAF,CAAQE,EAAR,KAAeqB,KAAzC,CAAd;AACA,QAAIZ,KAAK,GAAG,KAAKW,YAAL,CAAkBC,KAAlB,EAAyBC,SAAS,CAACf,KAAnC,EAA0Ce,SAAS,CAACd,KAApD,CAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,SAAKkB,QAAL,CAAc5B,KAAK,KAAK;AACpBC,MAAAA,EAAE,EAAC0B,OAAO,CAAC5B,KAAR,CAAcE,EADG;AAEpBC,MAAAA,KAAK,EAAEyB,OAAO,CAAC5B,KAAR,CAAc8B,KAFD;AAGpB1B,MAAAA,IAAI,EAAEwB,OAAO,CAAC5B,KAAR,CAAc+B,OAHA;AAIpBtB,MAAAA,KAAK,EAAEe,SAAS,CAACf,KAJG;AAKpBC,MAAAA,KAAK,EAAEc,SAAS,CAACd,KALG;AAMpBC,MAAAA,KAAK,EAAEA;AANa,KAAL,CAAnB;AAQD;;AAEDW,EAAAA,YAAY,CAACpB,EAAD,EAAKO,KAAL,EAAYC,KAAZ,EAAkB;AAC5B;;;AAGA,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACd,KAAF,CAAQE,EAAR,KAAeA,EAA/B,CAAX;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAGL,KAAK,CAACK,CAAD,CAAL,CAASf,KAAT,CAAeiB,IAAf,KAAwBf,EAA3B,EAA8B;AAC5BS,QAAAA,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACK,CAAD,CAAhB;AACAJ,QAAAA,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACd,KAAF,CAAQE,EAAR,KAAeQ,KAAK,CAACK,CAAD,CAAL,CAASf,KAAT,CAAekB,EAA9C,CAAX;AACD,OAHD,MAGM,IAAGR,KAAK,CAACK,CAAD,CAAL,CAASf,KAAT,CAAekB,EAAf,KAAsBhB,EAAzB,EAA4B;AAChCS,QAAAA,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACK,CAAD,CAAhB;AACAJ,QAAAA,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACd,KAAF,CAAQE,EAAR,KAAeQ,KAAK,CAACK,CAAD,CAAL,CAASf,KAAT,CAAeiB,IAA9C,CAAX;AACD;AACF;;AACD,WAAON,KAAP;AACD;;AAEDU,EAAAA,OAAO,CAAClB,KAAD,EAAO;AACZ;;;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAIkB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK1B,KAApB,CAAX,CAAhB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;;AAEDgB,EAAAA,OAAO,CAACa,OAAD,EAAS;AACd;;;AAGA,QAAIR,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK1B,KAApB,CAAX,CAAhB;AACAuB,IAAAA,SAAS,CAACf,KAAV,CAAgBI,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACd,KAAF,CAAQE,EAAR,KAAesB,SAAS,CAACtB,EAAnD,EAAuDF,KAAvD,CAA6D+B,OAA7D,GAAuEC,OAAvE,CALc,CAMd;;AACA,SAAKH,QAAL,CAAc5B,KAAK,KAAK;AACpBC,MAAAA,EAAE,EAACsB,SAAS,CAACtB,EADO;AAEpBC,MAAAA,KAAK,EAAEqB,SAAS,CAACrB,KAFG;AAGpBC,MAAAA,IAAI,EAAE4B,OAHc;AAIpBvB,MAAAA,KAAK,EAAEe,SAAS,CAACf,KAJG;AAKpBC,MAAAA,KAAK,EAAEc,SAAS,CAACd;AALG,KAAL,CAAnB;AAOD;;AAEDuB,EAAAA,MAAM,GAAG;AACP;;;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKzB,OAAlC;AAA2C,MAAA,OAAO,EAAE,KAAKa,OAAzD;AAAkE,MAAA,KAAK,EAAE,KAAKpB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC,MAAhB;AAAuB,MAAA,KAAK,EAAE,KAAKA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC,MAAhB;AAAuB,MAAA,KAAK,EAAE,KAAKA,KAAnC;AAA0C,MAAA,OAAO,EAAE,KAAKkB,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AAzJ4C","sourcesContent":["import React, { Component } from 'react';\nimport '../node_modules/react-vis/dist/style.css';\nimport { Network, Node, Edge } from 'react-vis-network';\nimport { Graph } from 'react-graph-vis'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NoteScreen from './NoteScreen.js'\nimport DataScreen from './DataScreen.js'\nimport TopBar from './TopBar.js'\nimport LeftBar from './LeftBar.js'\n\nexport default class NoteWeb extends Component {\n  /**\n   * This is the main application. Creates a network of nodes for note taking, rather than a linear set of notes. \n   * Will use machine learning on back end to automatically link notes to each other\n   */\n  constructor(props) {\n  /**\n   * Constructor for Noteweb application. Initializes nodes and edges for graph. initializes the state. binds functions. \n   */\n    super(props);\n    this.state = {id: \"None\",  title: \"Title\", note: \"This is where your note is displayed\"};\n    console.log(this.note)\n    const Decorator = props => {\n      return (\n        <button\n          onClick={() => this.getNote(props.id)}\n        >\n          Click Me\n        </button>\n      );\n    };\n    let nodes = [\n      <Node key=\"vader\" id= \"vader\" label=\"Darth Vader\" decorator={Decorator} content=\"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\"/>,\n      <Node key=\"luke\" id= \"luke\" label=\"Luke Skywalker\" decorator={Decorator} content=\"This is the Galaxy's only hope\"/>,\n      <Node key=\"leia\" id= \"leia\" label=\"Leia Organa\" decorator={Decorator} content=\"This is the girl who is always counted out but comes up big\"/>,\n      <Node key=\"han\" id= \"han\" label=\"Han Solo\" decorator={Decorator} content=\"What is this amateur hour\"/>,\n      <Node key=\"chewy\" id= \"chewy\" label=\"Chewbacca\" decorator={Decorator} content=\"Ahhhhhhhhhhhhh\"/>,\n      <Node key=\"obi\" id= \"obi\" label=\"Obi-Wan Kenobi\" decorator={Decorator} content=\"Why did you try it Anakin? I had the high ground. And I've used that exact trick on Darth Maul which I must have told you about. Did you think I wouldn't see that shit coming? Come on young padawan.\"/>,\n      <Node key=\"greedo\" id= \"greedo\" label=\"Greedo\" decorator={Decorator} content=\"The green guy who was just too slow for Han Solo. Or was I innacurate? Did I shoot or not? Idk George Lucas keeps editing my only scene\"/>,\n      <Node key=\"yoda\" id= \"yoda\" label=\"Yoda\" decorator={Decorator} content=\"That baby me am not. Look nothing like him, I did. More handsome I am.\"/>,\n      <Node key=\"boba\" id= \"boba\" label=\"Boba Fett\" decorator={Decorator} content=\"Still being digested to this day in The Great Pit of Carkoon\"/>,\n      <Node key=\"jabba\" id= \"jabba\" label=\"Jabba The Hutt\" decorator={Decorator} content=\"Me want solo on my wall\"/>,\n      <Node key=\"lando\" id= \"lando\" label=\"Lando Calrissian\" decorator={Decorator} content=\"I'm in it for the money, and the women, and the greater good, but definitely the money\"/>,\n      <Node key=\"emporer\" id= \"emporer\" label=\"Emporer Palpatine\" decorator={Decorator} content=\"This is the Dark Lord of the Sith\"/>\n    ];\n    let edges = [\n      <Edge key=\"0\" id= \"0\" from=\"yoda\" to=\"chewy\" />,\n      <Edge key=\"1\" id= \"1\" from=\"vader\" to=\"luke\" />,\n      <Edge key=\"2\" id= \"2\" from=\"vader\" to=\"leia\" />,\n      <Edge key=\"3\" id= \"3\" from=\"han\" to=\"leia\" />,\n      <Edge key=\"4\" id= \"4\" from=\"han\" to=\"chewy\" />,\n      <Edge key=\"5\" id= \"5\" from=\"obi\" to=\"luke\" />,\n      <Edge key=\"6\" id= \"6\" from=\"leia\" to=\"luke\" />,\n      <Edge key=\"7\" id= \"7\" from=\"vader\" to=\"obi\" />,\n      <Edge key=\"8\" id= \"8\" from=\"obi\" to=\"yoda\" />,\n      <Edge key=\"9\" id= \"9\" from=\"vader\" to=\"yoda\" />,\n      <Edge key=\"10\" id= \"10\" from=\"jabba\" to=\"han\" />,\n      <Edge key=\"11\" id= \"11\" from=\"jabba\" to=\"boba\" />,\n      <Edge key=\"12\" id= \"12\" from=\"boba\" to=\"han\" />,\n      <Edge key=\"13\" id= \"13\" from=\"han\" to=\"greedo\" />,\n      <Edge key=\"14\" id= \"14\" from=\"jabba\" to=\"greedo\" />,\n      <Edge key=\"15\" id= \"15\" from=\"yoda\" to=\"luke\" />,\n      <Edge key=\"16\" id= \"16\" from=\"emporer\" to=\"vader\" />,\n      <Edge key=\"17\" id= \"17\" from=\"emporer\" to=\"luke\" />,\n      <Edge key=\"18\" id= \"18\" from=\"lando\" to=\"han\" />\n    ];\n    let items = [];\n    items.push(nodes.find(x => x.props.id === \"vader\"));\n    for (let i = 0; i < edges.length; i++) {\n      console.log(edges[i]);\n      if(edges[i].props.from === \"vader\"){\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.to));\n      }else if(edges[i].props.to === \"vader\"){\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.from));\n      }\n    }\n    this.state = {id: \"vader\",  title: \"Darth Vader\", note: \"The chosen one. Brought balance to the force. Before me thousands of Jedi, only two Sith. After me, two Jedi and two Sith. That's what you call balanced.\", nodes: nodes, edges: edges, items:items};\n    this.setNote = this.setNote.bind(this);\n    this.getNote = this.getNote.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.computeItems = this.computeItems.bind(this);\n    console.log(this.state);\n  }\n  \n  getNote(newId){\n    /**\n     * Retreives the contents of a note and displays the contents in the NoteScreen \n     */\n    console.log(\"get\")\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    console.log(stateCopy);\n    let newNode = stateCopy.nodes.find(x => x.props.id === newId);\n    let items = this.computeItems(newId, stateCopy.nodes, stateCopy.edges);\n    console.log(items);\n    this.setState(state => ({\n        id:newNode.props.id,\n        title: newNode.props.label,\n        note: newNode.props.content,\n        nodes: stateCopy.nodes,\n        edges: stateCopy.edges,\n        items: items\n      }));\n  }\n  \n  computeItems(id, nodes, edges){\n    /**\n     * Computes the new items to be \n     */\n    let items = [];\n    items.push(nodes.find(x => x.props.id === id));\n    for (let i = 0; i < edges.length; i++) {\n      if(edges[i].props.from === id){\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.to));\n      }else if(edges[i].props.to === id){\n        items.push(edges[i]);\n        items.push(nodes.find(x => x.props.id === edges[i].props.from));\n      }\n    }\n    return items;\n  }\n  \n  addNote(title){\n    /**\n     * Adds a new node to the network \n     */\n    console.log(\"add\")\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    console.log(title);\n  }\n  \n  setNote(newNote){\n    /**\n     * Adds a new node to the network \n     */\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.nodes.find(x => x.props.id === stateCopy.id).props.content = newNote;\n    // console.log(stateCopy);\n    this.setState(state => ({\n        id:stateCopy.id,\n        title: stateCopy.title,\n        note: newNote,\n        nodes: stateCopy.nodes,\n        edges: stateCopy.edges\n      }));\n  }\n  \n  render() {\n    /**\n     * Renders the component\n     */\n    return (\n      <div className=\"note-web\">\n        <TopBar key=\"top\"/>\n        <div className=\"main-content\">\n          <LeftBar key=\"left\" getNote={this.getNote} addNote={this.addNote} state={this.state}/>\n          <DataScreen key=\"data\" state={this.state} />\n          <NoteScreen key=\"note\" state={this.state} setNote={this.setNote}/>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}