"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _svg = require("./util/svg");

var _RafDebouncer = _interopRequireDefault(require("./util/RafDebouncer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var style = {
  position: 'absolute',
  display: 'none',
  top: 0,
  left: 0
};

var VisModule =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(VisModule, _PureComponent);

  function VisModule() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, VisModule);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VisModule)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "decoratorRef", _react.default.createRef());

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "drawDebouncer", new _RafDebouncer.default());

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "hasAfterDrawingListener", false);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updateNetwork", function () {
      var _this$props = _this.props,
          decorator = _this$props.decorator,
          network = _this$props.vis.network;

      if (!_this.hasAfterDrawingListener && decorator) {
        _this.hasAfterDrawingListener = true;
        network.on('afterDrawing', _this.moveDecorator);
      }

      if (_this.hasAfterDrawingListener && !decorator) {
        network.off('afterDrawing', _this.moveDecorator);
        _this.hasAfterDrawingListener = false;
      }

      if (_this.hasAfterDrawingListener) {
        _this.moveDecorator();
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "moveDecorator", function () {
      return _this.drawDebouncer.requestAnimationFrame(function () {
        var _this$props2 = _this.props,
            id = _this$props2.id,
            network = _this$props2.vis.network;
        var decoratorEl = _this.decoratorRef.current;

        if (network && decoratorEl) {
          var _network$getPositions = network.getPositions([id]),
              canvasPosition = _network$getPositions[id];

          if (canvasPosition) {
            var boundingBox = network.getBoundingBox(id);
            var topCenterPosition = {
              x: canvasPosition.x,
              y: boundingBox.top
            };
            var domPosition = network.canvasToDOM(topCenterPosition); // Remove `display: none` before getting the element size

            decoratorEl.style.display = 'block';

            var _decoratorEl$getBound = decoratorEl.getBoundingClientRect(),
                height = _decoratorEl$getBound.height,
                width = _decoratorEl$getBound.width;

            var x = domPosition.x - width / 2;
            var y = domPosition.y - height;
            decoratorEl.style.transform = "translateX(".concat(x, "px) translateY(").concat(y, "px)");
          }
        }
      });
    });

    return _this;
  }

  _createClass(VisModule, [{
    key: "updateDecorator",
    value: function updateDecorator() {
      var _this$props3 = this.props,
          network = _this$props3.vis.network,
          decorator = _this$props3.decorator; // Initial load, skip

      if (!network) {
        return;
      }

      if (!this.hasAfterDrawingListener && decorator) {
        this.hasAfterDrawingListener = true;
        network.on('afterDrawing', this.moveDecorator);
      }

      if (this.hasAfterDrawingListener && !decorator) {
        network.off('afterDrawing', this.moveDecorator);
        this.hasAfterDrawingListener = false;
      }

      if (this.hasAfterDrawingListener) {
        this.moveDecorator();
      }
    }
  }, {
    key: "getModuleOptions",
    value: function getModuleOptions() {
      var _this$props4 = this.props,
          component = _this$props4.component,
          entityOptions = _objectWithoutProperties(_this$props4, ["component"]);

      var options = _objectSpread({}, entityOptions);

      if (component) {
        options.image = (0, _svg.reactToSvgImageUrl)(component(this.props));
        options.shape = options.shape || 'image';
      }

      return options;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateDecorator();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.updateDecorator();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var network = this.props.vis.network;

      if (this.hasAfterDrawingListener) {
        network.off('afterDrawing', this.moveDecorator);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          decorator = _this$props5.decorator,
          network = _this$props5.vis.network;
      return _react.default.createElement(_react.default.Fragment, null, network && decorator && _react.default.createElement("div", {
        style: style,
        ref: this.decoratorRef
      }, decorator(this.props)));
    }
  }]);

  return VisModule;
}(_react.PureComponent);

exports.default = VisModule;

_defineProperty(VisModule, "propTypes", {
  id: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
  component: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),
  decorator: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),
  vis: _propTypes.default.shape({
    nodes: _propTypes.default.object.isRequired,
    edges: _propTypes.default.object.isRequired,
    network: _propTypes.default.object
  })
});