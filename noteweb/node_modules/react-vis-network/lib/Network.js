"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _visNetwork = require("vis/dist/vis-network.min");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultStyles = {
  position: 'relative',
  width: '100%',
  height: '100%',
  overflow: 'hidden'
};
var eventPattern = /^on([A-Z])(.*)$/;

var VisNetwork =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(VisNetwork, _PureComponent);

  function VisNetwork() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, VisNetwork);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VisNetwork)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "visContainerRef", (0, _react.createRef)());

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "edges", new _visNetwork.DataSet([]));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "nodes", new _visNetwork.DataSet([]));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      edges: _this.edges,
      nodes: _this.nodes
    });

    return _this;
  }

  _createClass(VisNetwork, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var options = this.props.options;
      this.network = new _visNetwork.Network(this.visContainerRef.current, {
        edges: this.edges,
        nodes: this.nodes
      }, options);
      Object.keys(this.props).filter(function (prop) {
        return prop.match(eventPattern);
      }).forEach(function (prop) {
        var event = prop.replace(eventPattern, function (match, p1, rest) {
          return p1.toLowerCase() + rest;
        }); // Props controlled by developer
        // eslint-disable-next-line security/detect-object-injection

        _this2.network.on(event, _this2.props[prop]);
      });
      this.setState({
        network: this.network
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.network.destroy();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this$props = this.props,
          options = _this$props.options,
          scale = _this$props.scale,
          position = _this$props.position;
      var network = this.network;
      network.setOptions(options);

      if (scale !== prevProps.scale || position !== prevProps.position) {
        network.moveTo({
          scale: scale || network.getScale(),
          position: position || network.getViewPosition()
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props2 = this.props,
          style = _this$props2.style,
          children = _this$props2.children;

      var appliedStyles = _objectSpread({}, defaultStyles, style);

      var extendedChildren = _react.default.Children.map(children, function (child) {
        return _react.default.cloneElement(child, {
          vis: _this3.state
        });
      });

      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", {
        ref: this.visContainerRef,
        className: this.props.className,
        style: appliedStyles
      }, extendedChildren));
    }
  }]);

  return VisNetwork;
}(_react.PureComponent);

exports.default = VisNetwork;

_defineProperty(VisNetwork, "defaultProps", {
  options: {},
  style: {}
});

_defineProperty(VisNetwork, "propTypes", {
  children: _propTypes.default.node,
  options: _propTypes.default.object,
  scale: _propTypes.default.number,
  position: _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  }),
  style: _propTypes.default.object,
  className: _propTypes.default.string
});